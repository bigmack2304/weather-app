{"version":3,"file":"static/js/938.62bace83.chunk.js","mappings":"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","sources":["utils/fetch_current_weather.ts","hooks/useCurrentWeather.ts","ui/IconDirection.tsx","components/WeatherNowTime/WeatherNowTime.tsx","ui/IconWeatherClearDay.tsx","ui/IconWeatherClearNight.tsx","ui/IconWeatherCloudyDay.tsx","ui/IconWeatherCloudyNight.tsx","ui/IconWeatherCloudy.tsx","ui/IconWeatherRain_1.tsx","ui/IconWeatherRain_2.tsx","ui/IconWeatherRain_3.tsx","ui/IconWeatherThunder.tsx","ui/IconWeatherSnowRain.tsx","ui/IconWeatherSnow_1.tsx","ui/IconWeatherSnow_2.tsx","ui/IconWeatherSnow_3.tsx","components/WeatherIcon/WeatherIcon.tsx","components/WeatherBaseInfo/WeatherBaseInfo.tsx","components/WeatherAltInfoTemplate/WeatherAltInfoTemplate.tsx","utils/decorators.ts","HOC/HoverHint/HoverHint.tsx","ui/IconSunrise.tsx","components/WeatherSunPhase/WeatherSunPhase.tsx","components/CityCurrentWeather/CityCurrentWeather.tsx","utils/fetch_5d3h_weather.ts","hooks/use5d3hWeather.ts","components/City5d3hWeather/City5d3hWeather_daysList.tsx","components/City5d3hWeather/City5d3hWeather_dayWeather.tsx","components/CustomizedTooltip/CustomizedTooltip.tsx","components/ChartTypeOne/ChartTypeOne.tsx","components/City5d3hWeather/City5d3hWeather_chart.tsx","components/City5d3hWeather/City5d3hWeather_chartTypeList.tsx","components/City5d3hWeather/City5d3hWeather_chartBlock.tsx","components/City5d3hWeather/City5d3hWeather.tsx","utils/chart_fix.ts","HOC/ErrorCacher/ErrorCacher.tsx","pages/Home/Home.tsx","HOC/OnResizeUpdate/OnResizeUpdate.tsx"],"sourcesContent":["// запрос текущей погоды (по внешнему API)\n// https://openweathermap.org/current\n// https://openweathermap.org/weather-conditions#How-to-get-icon-URL\n\nimport { WEATHER_API_KEY, WEATHER_API_ADRESS_CURRENT } from \"./global_vars\";\nimport { get_system_language } from \"./util_functions\";\nimport type * as FetchLatLonTypes from \"./fetch_LatLon\";\n\ntype TresponseObjWeatherObj = {\n    id:\n        | 200\n        | 201\n        | 202\n        | 210\n        | 211\n        | 212\n        | 221\n        | 230\n        | 231\n        | 232\n        | 300\n        | 301\n        | 302\n        | 310\n        | 311\n        | 312\n        | 313\n        | 314\n        | 321\n        | 500\n        | 501\n        | 502\n        | 503\n        | 504\n        | 511\n        | 520\n        | 521\n        | 522\n        | 531\n        | 600\n        | 601\n        | 602\n        | 611\n        | 612\n        | 613\n        | 615\n        | 620\n        | 621\n        | 622\n        | 701\n        | 711\n        | 721\n        | 731\n        | 741\n        | 751\n        | 761\n        | 762\n        | 771\n        | 781\n        | 800\n        | 801\n        | 802\n        | 803\n        | 804;\n    main:\n        | \"Thunderstorm\"\n        | \"Drizzle\"\n        | \"Rain\"\n        | \"Snow\"\n        | \"Mist\"\n        | \"Smoke\"\n        | \"Haze\"\n        | \"Dust\"\n        | \"Fog\"\n        | \"Sand\"\n        | \"Dust\"\n        | \"Ash\"\n        | \"Squall\"\n        | \"Tornado\"\n        | \"Clear\"\n        | \"Clouds\";\n    description: string;\n    icon: string;\n};\n\ntype TresponseObjWeather = TresponseObjWeatherObj[];\n\ninterface IFetchCurrentWeatherArgs {\n    lat: number;\n    lon: number;\n    callBack?: (response: TResponse) => void;\n    errorCallback?: () => void;\n    getController?: (obj: AbortController) => void;\n}\n\ntype TresponseObj = {\n    coord: {\n        lon: number;\n        lat: number;\n    };\n    weather: TresponseObjWeather;\n    base: string;\n    main: {\n        temp: number;\n        feels_like: number;\n        temp_min: number;\n        temp_max: number;\n        pressure?: number;\n        humidity: number;\n        sea_level?: number;\n        grnd_level?: number;\n    };\n    visibility: number;\n    wind?: {\n        speed: number;\n        deg: number;\n        gust: number;\n    };\n    rain?: {\n        [\"1h\"]?: number;\n        [\"3h\"]?: number;\n    };\n    snow?: {\n        [\"1h\"]?: number;\n        [\"3h\"]?: number;\n    };\n    clouds?: {\n        all?: number;\n    };\n    dt: number;\n    sys: {\n        type: number;\n        id: number;\n        country: FetchLatLonTypes.TResponseObj[\"country\"];\n        sunrise: number;\n        sunset: number;\n    };\n    timezone: number;\n    id: number;\n    name: string;\n    cod: number;\n};\n\ntype TResponse = TresponseObj | undefined;\n\nfunction generate_url(lat: number, lon: number): URL {\n    let temp_url = new URL(WEATHER_API_ADRESS_CURRENT);\n    temp_url.searchParams.set(\"lat\", lat.toString());\n    temp_url.searchParams.set(\"lon\", lon.toString());\n    temp_url.searchParams.set(\"units\", \"metric\");\n    temp_url.searchParams.set(\"lang\", get_system_language());\n    temp_url.searchParams.set(\"appid\", WEATHER_API_KEY);\n    return temp_url;\n}\n\n/*\n    fetch_current_weather делает запрос на инфу о погоде, все необходимое возвращает через колбеки\n    lat lon координаты по которым нужно получить погоду\n    callBack: это функция которую мы можем указать, при получении ответа, будет вызванна эта функция и ей в параметры\n                прилетит ответ с сервера.\n    errorCallback: просто функция которая будет вызвана если произойдет исключение (AbortController не в щет)\n    getController: вызывается перед запросом, в параметры получает AbortController для того чтобы можно было отменить fetch\n*/\n\nasync function fetch_current_weather({\n    lat,\n    lon,\n    callBack = () => {},\n    errorCallback = () => {},\n    getController = () => {},\n}: Readonly<IFetchCurrentWeatherArgs>) {\n    let full_url = generate_url(lat, lon);\n\n    let response: TResponse;\n\n    try {\n        let controller = new AbortController();\n        getController(controller);\n        let get_response = await fetch(full_url, { signal: controller.signal });\n        let raw_response = await get_response.json();\n\n        if (raw_response.cod && raw_response.cod !== 200) {\n            throw new Error(JSON.stringify(raw_response));\n        }\n\n        response = raw_response;\n    } catch (err) {\n        if (err instanceof Error && err.message.includes(\"The user aborted a request.\")) {\n            // а нифига в этом случае не делаем\n            return;\n        }\n        console.group(\"ERROR INFO\");\n        console.error(`Ошибка запроса по адресу ${full_url}`);\n        console.error(err);\n        console.groupEnd();\n\n        errorCallback();\n    }\n\n    callBack(response);\n}\n\nexport { fetch_current_weather };\nexport type { IFetchCurrentWeatherArgs, TResponse, TresponseObj, TresponseObjWeather, TresponseObjWeatherObj };\n","import React, { useState, useRef } from \"react\";\nimport { fetch_current_weather } from \"../utils/fetch_current_weather\";\nimport type * as TypesCurrentWeather from \"../utils/fetch_current_weather\";\n\ntype TrefMemoPos = {\n    prewLat: TuseCurrentWeatherArgs[\"lat\"];\n    prewLon: TuseCurrentWeatherArgs[\"lon\"];\n};\n\ntype TuseCurrentWeatherArgs = {\n    cityName?: string;\n    lat?: number;\n    lon?: number;\n    errorCallback?: () => void;\n    fetchStartCallback?: () => void;\n    fetchEndCallback?: () => void;\n};\n\nconst MAX_RADIUS = 0.05;\n\n// возвращает [данные о погоде, startFetch для старта запроса, forceFetch для принудительного запроса]\n// startFetch - делает запрос, но с проверками и ограничениями, чтобы нельзя было получать данные для города для которого мы уже получили данные, также др. проверки\n// forceFetch - тоже делает запрос но тут ограничений почти нет, в 99% случаев запрос будет сделан\n\nfunction useCurrentWeather({\n    lat,\n    lon,\n    cityName,\n    errorCallback = () => {},\n    fetchEndCallback = () => {},\n    fetchStartCallback = () => {},\n}: TuseCurrentWeatherArgs): [currentWeather: TypesCurrentWeather.TResponse, startFetch: () => void, forceFetch: () => void] {\n    let [weather, setWeather] = useState<TypesCurrentWeather.TResponse>();\n    let memoPos = useRef<TrefMemoPos>({ prewLat: -999.999, prewLon: -999.999 }); // первоначально инициаизируем несуществующими координатами\n    let isFetching = useRef<boolean>(false); // состояние Fetch, идетли сейчас запрос ?\n    let abortController = useRef<null | AbortController>(null);\n\n    const fetchingResponseCallback = (resp: TypesCurrentWeather.TResponse) => {\n        isFetching.current = false;\n        abortController.current = null;\n        setWeather(resp);\n        fetchEndCallback();\n    };\n\n    const fetchingErrorCallback = () => {\n        isFetching.current = false;\n        abortController.current = null;\n        errorCallback();\n    };\n\n    const fetchingStartCallback = () => {\n        if (isFetching.current && abortController.current != null) {\n            abortController.current.abort();\n            console.log(\"old fetch aborted\");\n            abortController.current = null;\n        }\n        isFetching.current = true;\n        fetchStartCallback();\n    };\n\n    const getAbortController = (obj: AbortController) => {\n        abortController.current = obj;\n    };\n\n    const update_memoPos = () => {\n        if (memoPos.current.prewLat !== lat) {\n            memoPos.current.prewLat = lat;\n        }\n        if (memoPos.current.prewLon !== lon) {\n            memoPos.current.prewLon = lat;\n        }\n    };\n\n    const isNewCoordsOutsRadiusOldCoords = () => {\n        if (Math.abs(weather!.coord.lat - lat!) > MAX_RADIUS || Math.abs(weather!.coord.lon - lon!) > MAX_RADIUS) {\n            return true;\n        }\n        return false;\n    };\n\n    const force_fetch = () => {\n        if (lat && lon) {\n            fetchingStartCallback();\n            fetch_current_weather({\n                lat,\n                lon,\n                callBack: fetchingResponseCallback,\n                errorCallback: fetchingErrorCallback,\n                getController: getAbortController,\n            });\n            return;\n        }\n    };\n\n    const startFetch = () => {\n        // if (lat && lon && !isFetching.current) {\n        if (lat && lon) {\n            if (memoPos.current.prewLat === lat || memoPos.current.prewLon === lon) return;\n\n            update_memoPos();\n\n            if (!weather) {\n                fetchingStartCallback();\n                fetch_current_weather({\n                    lat,\n                    lon,\n                    callBack: fetchingResponseCallback,\n                    errorCallback: fetchingErrorCallback,\n                    getController: getAbortController,\n                });\n            } else {\n                // если новые координаты +- теже что и координаты текущего города то ничего не делаем\n                // координаты от GEOAPI и из API запроса погоды могут немного отличватся\n                if (isNewCoordsOutsRadiusOldCoords()) {\n                    // дополнительно проверяем что искомый город отличается от текущего\n                    if (weather.name !== cityName) {\n                        fetchingStartCallback();\n                        fetch_current_weather({\n                            lat,\n                            lon,\n                            callBack: fetchingResponseCallback,\n                            errorCallback: fetchingErrorCallback,\n                            getController: getAbortController,\n                        });\n                    }\n                }\n            }\n        }\n    };\n\n    return [weather, startFetch, force_fetch];\n}\n\nexport { useCurrentWeather };\nexport type { TuseCurrentWeatherArgs };\n","import React from \"react\";\nimport { number_to_deg360 } from \"../utils/util_functions\";\nimport \"./IconDirection.scss\";\n\ninterface IIconDirection {\n    addClassName?: string[];\n    direction?: number;\n    title?: string;\n}\n\ntype TProps = Readonly<IIconDirection>;\n\nfunction IconDirection({ addClassName = [\"\"], direction = 0, title }: TProps) {\n    let componentClassName = [...addClassName, \"IconDirection\"].join(\" \");\n    let fixed_direction = number_to_deg360(direction);\n\n    const onClick = (e: React.MouseEvent) => {};\n\n    return (\n        <div className={componentClassName} title={title} onClick={onClick}>\n            <svg className=\"IconDirection__icon\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g>\n                    <g fill=\"#010101\">\n                        <path\n                            d=\"m256 480.63a225.11 225.11 0 0 1 -159.18-384.28 225.11 225.11 0 0 1 318.36 318.35 223.67 223.67 0 0 1 -159.18 65.93zm0-438.22c-117.51 0-213.11 95.59-213.11 213.11s95.6 213.11 213.11 213.11 213.11-95.63 213.11-213.11-95.6-213.11-213.11-213.11z\"\n                            fill=\"#fdfdfd\"\n                        ></path>\n                        <path d=\"m256 69.34a6 6 0 0 1 -6-6v-52.84a6 6 0 0 1 12 0v52.84a6 6 0 0 1 -6 6z\" fill=\"#010101\"></path>\n                        <path d=\"m256 507.5a6 6 0 0 1 -6-6v-52.84a6 6 0 0 1 12 0v52.84a6 6 0 0 1 -6 6z\" fill=\"#010101\"></path>\n                        <path d=\"m63.34 262h-52.84a6 6 0 0 1 0-12h52.84a6 6 0 1 1 0 12z\" fill=\"#010101\"></path>\n                        <path d=\"m501.5 262h-52.84a6 6 0 0 1 0-12h52.84a6 6 0 0 1 0 12z\" fill=\"#010101\"></path>\n                    </g>\n                    <g style={{ transform: `rotate(${fixed_direction}deg)`, transformOrigin: `50% 50%` }}>\n                        <path\n                            d=\"m395.14 345.44-125.72-225.78a15.36 15.36 0 0 0 -26.84 0l-125.72 225.78c-7.39 13.26 6.89 28.06 20.41 21.15l111.73-57.07a15.38 15.38 0 0 1 14 0l111.74 57.07c13.51 6.91 27.79-7.89 20.4-21.15z\"\n                            fill=\"#c5d9ff\"\n                        ></path>\n                        <path\n                            d=\"m232.57 317.91-95.3 48.68c-13.52 6.91-27.8-7.89-20.41-21.16l58.39-104.86a501.07 501.07 0 0 0 57.32 77.34z\"\n                            fill=\"#c5d9ff\"\n                        ></path>\n                        <path\n                            d=\"m177.16 243.12a5.94 5.94 0 0 1 -2.91-.76 6 6 0 0 1 -2.32-8.16l5-9a6 6 0 1 1 10.49 5.8l-5 9a6 6 0 0 1 -5.26 3.12z\"\n                            fill=\"#010101\"\n                        ></path>\n                        <path\n                            d=\"m130.14 374.36a21.47 21.47 0 0 1 -18.52-31.85l49.79-89.41a6 6 0 1 1 10.48 5.84l-49.79 89.41a9.37 9.37 0 0 0 12.44 12.9l111.74-57.07a21.42 21.42 0 0 1 19.44 0l111.74 57.07a9.37 9.37 0 0 0 12.44-12.9l-125.72-225.77a9.36 9.36 0 0 0 -16.36 0l-49.82 89.56a6 6 0 0 1 -10.48-5.84l49.87-89.56a21.08 21.08 0 0 1 18.66-11 21.07 21.07 0 0 1 18.66 11l125.67 225.77a21.36 21.36 0 0 1 -28.38 29.42l-111.74-57.07a9.38 9.38 0 0 0 -8.52 0l-111.74 57.07a21.63 21.63 0 0 1 -9.86 2.43z\"\n                            fill=\"#010101\"\n                        ></path>\n                    </g>\n                </g>\n            </svg>\n            <div className=\"IconDirection__face\"></div>\n        </div>\n    );\n}\n\nexport { IconDirection };\n","import React from \"react\";\nimport \"./WeatherNowTime.scss\";\nimport { get_text_date } from \"../../utils/util_functions\";\n\n// возвращает элемент с текстом времяни, закодированным в погоду\n\ninterface IWeatherNowTimeProps {\n    addClassName?: string[];\n    get_dayNum_monthName?: boolean;\n    get_year?: boolean;\n    get_hours?: boolean;\n    get_minutes?: boolean;\n    get_hours_minutes?: boolean;\n    times: { dt: number; timezone: number };\n}\n\ntype TProps = Readonly<IWeatherNowTimeProps>;\n\nfunction WeatherNowTime({\n    addClassName = [\"\"],\n    times,\n    get_dayNum_monthName = true,\n    get_year = true,\n    get_hours = true,\n    get_minutes = true,\n    get_hours_minutes = true,\n}: TProps) {\n    const componentClassName = [...addClassName, \"WeatherNowTime\"].join(\" \");\n    let obj_date: ReturnType<typeof get_text_date>;\n\n    let weather_date = new Date((times.dt + times.timezone) * 1000); // сервер возвращает таймштамп в секундах а также необходимое смещение для нашего города\n    obj_date = get_text_date(weather_date);\n\n    const RenderString = () => {\n        let str = \"\";\n\n        if (get_dayNum_monthName) {\n            str += ` ${obj_date.dayNum_monthNameUTC}`;\n        }\n\n        if (get_year) {\n            str += ` ${obj_date.year_numUTC}`;\n        }\n\n        if (get_hours) {\n            str += ` ${obj_date.hoursUTC}`;\n        }\n\n        if (get_minutes) {\n            str += ` ${obj_date.minutesUTC}`;\n        }\n\n        if (get_hours_minutes) {\n            str += ` ${obj_date.hoursUTC}:${obj_date.minutesUTC}`;\n        }\n\n        return str.trim();\n    };\n\n    return (\n        <div className={componentClassName}>\n            <p className=\"WeatherNowTime__data_details\">{RenderString()}</p>\n        </div>\n    );\n}\n\nexport { WeatherNowTime };\n","import React from \"react\";\nimport \"./IconWeatherClearDay.scss\";\n\ninterface IIconWeatherClearDayProps {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherClearDayProps>;\n\nfunction IconWeatherClearDay({ addClassName = [\"\"] }: TProps) {\n    let componentClassName = [...addClassName, \"IconWeatherClearDay\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 44.9 44.9\"\n            xmlSpace=\"preserve\"\n            className={componentClassName}\n        >\n            <g>\n                <circle className=\"IconWeatherClearDay__yellow\" cx=\"22.4\" cy=\"22.6\" r=\"11\"></circle>\n                <g>\n                    <path\n                        className=\"IconWeatherClearDay__yellow\"\n                        d=\"M22.6,8.1h-0.3c-0.3,0-0.6-0.3-0.6-0.6v-7c0-0.3,0.3-0.6,0.6-0.6l0.3,0c0.3,0,0.6,0.3,0.6,0.6 v7C23.2,7.8,22.9,8.1,22.6,8.1z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherClearDay__yellow\"\n                        d=\"M22.6,36.8h-0.3c-0.3,0-0.6,0.3-0.6,0.6v7c0,0.3,0.3,0.6,0.6,0.6h0.3c0.3,0,0.6-0.3,0.6-0.6v-7 C23.2,37,22.9,36.8,22.6,36.8z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherClearDay__yellow\"\n                        d=\"M8.1,22.3v0.3c0,0.3-0.3,0.6-0.6,0.6h-7c-0.3,0-0.6-0.3-0.6-0.6l0-0.3c0-0.3,0.3-0.6,0.6-0.6h7 C7.8,21.7,8.1,21.9,8.1,22.3z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherClearDay__yellow\"\n                        d=\"M36.8,22.3v0.3c0,0.3,0.3,0.6,0.6,0.6h7c0.3,0,0.6-0.3,0.6-0.6v-0.3c0-0.3-0.3-0.6-0.6-0.6h-7 C37,21.7,36.8,21.9,36.8,22.3z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherClearDay__yellow\"\n                        d=\"M11.4,31.6l0.2,0.3c0.2,0.2,0.2,0.6-0.1,0.8l-5.3,4.5c-0.2,0.2-0.6,0.2-0.8-0.1l-0.2-0.3 c-0.2-0.2-0.2-0.6,0.1-0.8l5.3-4.5C10.9,31.4,11.2,31.4,11.4,31.6z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherClearDay__yellow\"\n                        d=\"M33.2,13l0.2,0.3c0.2,0.2,0.6,0.3,0.8,0.1l5.3-4.5c0.2-0.2,0.3-0.6,0.1-0.8l-0.2-0.3 c-0.2-0.2-0.6-0.3-0.8-0.1l-5.3,4.5C33,12.4,33,12.7,33.2,13z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherClearDay__yellow\"\n                        d=\"M11.4,13.2l0.2-0.3c0.2-0.2,0.2-0.6-0.1-0.8L6.3,7.6C6.1,7.4,5.7,7.5,5.5,7.7L5.3,7.9 C5.1,8.2,5.1,8.5,5.4,8.7l5.3,4.5C10.9,13.5,11.2,13.5,11.4,13.2z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherClearDay__yellow\"\n                        d=\"M33.2,31.9l0.2-0.3c0.2-0.2,0.6-0.3,0.8-0.1l5.3,4.5c0.2,0.2,0.3,0.6,0.1,0.8l-0.2,0.3 c-0.2,0.2-0.6,0.3-0.8,0.1l-5.3-4.5C33,32.5,33,32.1,33.2,31.9z\"\n                    ></path>\n                    <animate\n                        attributeType=\"CSS\"\n                        attributeName=\"opacity\"\n                        dur=\"0.5s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0.6;1\"\n                        calcMode=\"linear\"\n                    ></animate>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherClearDay };\n","import React from \"react\";\nimport \"./IconWeatherClearNight.scss\";\n\ninterface IIconWeatherClearNightProps {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherClearNightProps>;\n\nfunction IconWeatherClearNight({ addClassName = [\"\"] }: TProps) {\n    let componentClassName = [...addClassName, \"IconWeatherClearNight\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 30.8 42.5\"\n            xmlSpace=\"preserve\"\n            className={componentClassName}\n        >\n            <path\n                id=\"Moon\"\n                className=\"IconWeatherClearNight__yellow\"\n                d=\"M15.3,21.4C15,12.1,21.1,4.2,29.7,1.7c-2.8-1.2-5.8-1.8-9.1-1.7C8.9,0.4-0.3,10.1,0,21.9 c0.3,11.7,10.1,20.9,21.9,20.6c3.2-0.1,6.3-0.9,8.9-2.3C22.2,38.3,15.6,30.7,15.3,21.4z\"\n            ></path>\n        </svg>\n    );\n}\n\nexport { IconWeatherClearNight };\n","import React from \"react\";\nimport \"./IconWeatherCloudyDay.scss\";\n\ninterface IIconWeatherCloudyDayProps {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherCloudyDayProps>;\n\nfunction IconWeatherCloudyDay({ addClassName = [\"\"] }: TProps) {\n    let componentClassName = [...addClassName, \"IconWeatherCloudyDay\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 61.7 42.8\"\n            className={componentClassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherCloudyDay__white\"\n                        d=\"M47.2,42.8H7.9c-4.3,0-7.9-3.5-7.9-7.9l0,0C0,30.5,3.5,27,7.9,27h39.4c4.3,0,7.9,3.5,7.9,7.9 v0C55.1,39.2,51.6,42.8,47.2,42.8z\"\n                    ></path>\n                    <circle className=\"IconWeatherCloudyDay__white\" cx=\"17.4\" cy=\"25.5\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherCloudyDay__white\" cx=\"34.5\" cy=\"23.9\" r=\"15.6\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;5;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <g>\n                    <circle className=\"IconWeatherCloudyDay__yellow\" cx=\"31.4\" cy=\"18.5\" r=\"9\"></circle>\n                    <g>\n                        <path\n                            className=\"IconWeatherCloudyDay__yellow\"\n                            d=\"M31.4,6.6L31.4,6.6c-0.4,0-0.6-0.3-0.6-0.6V0.6C30.8,0.3,31,0,31.3,0l0.1,0 C31.7,0,32,0.3,32,0.6v5.5C32,6.4,31.7,6.6,31.4,6.6z\"\n                        ></path>\n                        <path\n                            className=\"IconWeatherCloudyDay__yellow\"\n                            d=\"M31.4,30.1L31.4,30.1c-0.4,0-0.6,0.3-0.6,0.6v5.5c0,0.3,0.3,0.6,0.6,0.6h0.1 c0.3,0,0.6-0.3,0.6-0.6v-5.5C32,30.4,31.7,30.1,31.4,30.1z\"\n                        ></path>\n                        <path\n                            className=\"IconWeatherCloudyDay__yellow\"\n                            d=\"M19.6,18.3L19.6,18.3c0,0.4-0.3,0.6-0.6,0.6h-5.5c-0.3,0-0.6-0.3-0.6-0.6v-0.1 c0-0.3,0.3-0.6,0.6-0.6H19C19.3,17.8,19.6,18,19.6,18.3z\"\n                        ></path>\n                        <path\n                            className=\"IconWeatherCloudyDay__yellow\"\n                            d=\"M43.1,18.3L43.1,18.3c0,0.4,0.3,0.6,0.6,0.6h5.5c0.3,0,0.6-0.3,0.6-0.6v-0.1 c0-0.3-0.3-0.6-0.6-0.6h-5.5C43.4,17.8,43.1,18,43.1,18.3z\"\n                        ></path>\n                        <path\n                            className=\"IconWeatherCloudyDay__yellow\"\n                            d=\"M22.4,26L22.4,26c0.3,0.3,0.2,0.7,0,0.9l-4.2,3.6c-0.2,0.2-0.6,0.2-0.8-0.1l-0.1-0.1 c-0.2-0.2-0.2-0.6,0.1-0.8l4.2-3.6C21.9,25.8,22.2,25.8,22.4,26z\"\n                        ></path>\n                        <path\n                            className=\"IconWeatherCloudyDay__yellow\"\n                            d=\"M40.3,10.7L40.3,10.7c0.3,0.3,0.6,0.3,0.8,0.1l4.2-3.6c0.2-0.2,0.3-0.6,0.1-0.8l-0.1-0.1 c-0.2-0.2-0.6-0.3-0.8-0.1l-4.2,3.6C40.1,10.1,40,10.5,40.3,10.7z\"\n                        ></path>\n                        <path\n                            className=\"IconWeatherCloudyDay__yellow\"\n                            d=\"M22.4,10.8L22.4,10.8c0.3-0.3,0.2-0.7,0-0.9l-4.2-3.6c-0.2-0.2-0.6-0.2-0.8,0.1l-0.1,0.1 c-0.2,0.2-0.2,0.6,0.1,0.8l4.2,3.6C21.9,11,22.2,11,22.4,10.8z\"\n                        ></path>\n                        <path\n                            className=\"IconWeatherCloudyDay__yellow\"\n                            d=\"M40.3,26.1L40.3,26.1c0.3-0.3,0.6-0.3,0.8-0.1l4.2,3.6c0.2,0.2,0.3,0.6,0.1,0.8l-0.1,0.1 c-0.2,0.2-0.6,0.3-0.8,0.1l-4.2-3.6C40.1,26.7,40,26.3,40.3,26.1z\"\n                        ></path>\n                        <animate\n                            attributeType=\"CSS\"\n                            attributeName=\"opacity\"\n                            dur=\"0.5s\"\n                            keyTimes=\"0;0.5;1\"\n                            repeatCount=\"indefinite\"\n                            values=\"1;0.6;1\"\n                            calcMode=\"linear\"\n                        ></animate>\n                    </g>\n                </g>\n                <animateTransform\n                    attributeName=\"transform\"\n                    attributeType=\"XML\"\n                    dur=\"2s\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    type=\"scale\"\n                    values=\"1;1\"\n                    calcMode=\"linear\"\n                ></animateTransform>\n            </g>\n            <g>\n                <path\n                    className=\"IconWeatherCloudyDay__gray\"\n                    d=\"M55.7,25.1H34.4c-3.3,0-6-2.7-6-6v0c0-3.3,2.7-6,6-6h21.3c3.3,0,6,2.7,6,6v0 C61.7,22.4,59,25.1,55.7,25.1z\"\n                ></path>\n                <circle className=\"IconWeatherCloudyDay__gray\" cx=\"46.7\" cy=\"13.4\" r=\"10.7\"></circle>\n                <animateTransform\n                    attributeName=\"transform\"\n                    attributeType=\"XML\"\n                    dur=\"6s\"\n                    keyTimes=\"0;0.5;1\"\n                    repeatCount=\"indefinite\"\n                    type=\"translate\"\n                    values=\"0;-3;0\"\n                    calcMode=\"linear\"\n                ></animateTransform>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherCloudyDay };\n","import React from \"react\";\nimport \"./IconWeatherCloudyNight.scss\";\n\ninterface IIconWeatherCloudyNightProps {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherCloudyNightProps>;\n\nfunction IconWeatherCloudyNight({ addClassName = [\"\"] }: TProps) {\n    let componentClassName = [...addClassName, \"IconWeatherCloudyNight\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 60.7 44.4\"\n            className={componentClassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherCloudyNight__white\"\n                        d=\"M47.2,44.4H7.9c-4.3,0-7.9-3.5-7.9-7.9l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9 v0C55.1,40.9,51.6,44.4,47.2,44.4z\"\n                    ></path>\n                    <circle className=\"IconWeatherCloudyNight__white\" cx=\"17.4\" cy=\"27.2\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherCloudyNight__white\" cx=\"34.5\" cy=\"25.5\" r=\"15.6\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;5;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <path\n                    className=\"IconWeatherCloudyNight__yellow\"\n                    d=\"M33.6,17.9c-0.2-7.7,4.9-14.4,12-16.4c-2.3-1-4.9-1.5-7.6-1.5c-9.8,0.3-17.5,8.5-17.2,18.3 c0.3,9.8,8.5,17.5,18.3,17.2c2.7-0.1,5.2-0.8,7.5-1.9C39.3,32,33.8,25.6,33.6,17.9z\"\n                ></path>\n                <g>\n                    <path\n                        className=\"IconWeatherCloudyNight__gray\"\n                        d=\"M54.7,26.8H33.4c-3.3,0-6-2.7-6-6v0c0-3.3,2.7-6,6-6h21.3c3.3,0,6,2.7,6,6v0 C60.7,24.1,58,26.8,54.7,26.8z\"\n                    ></path>\n                    <circle className=\"IconWeatherCloudyNight__gray\" cx=\"45.7\" cy=\"15.1\" r=\"10.7\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;-3;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherCloudyNight };\n","import React from \"react\";\nimport \"./IconWeatherCloudy.scss\";\n\ninterface IIconWeatherCloudyProps {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherCloudyProps>;\n\nfunction IconWeatherCloudy({ addClassName = [\"\"] }: TProps) {\n    let componentClassName = [...addClassName, \"IconWeatherCloudy\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 60.7 60\"\n            className={componentClassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherCloudy__white\"\n                        d=\"M47.2,40H7.9C3.5,40,0,36.5,0,32.1l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9v0 C55.1,36.5,51.6,40,47.2,40z\"\n                    ></path>\n                    <circle className=\"IconWeatherCloudy__white\" cx=\"17.4\" cy=\"22.8\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherCloudy__white\" cx=\"34.5\" cy=\"21.1\" r=\"15.6\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;5;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <g>\n                    <path\n                        className=\"IconWeatherCloudy__gray\"\n                        d=\"M54.7,22.3H33.4c-3.3,0-6-2.7-6-6v0c0-3.3,2.7-6,6-6h21.3c3.3,0,6,2.7,6,6v0 C60.7,19.6,58,22.3,54.7,22.3z\"\n                    ></path>\n                    <circle className=\"IconWeatherCloudy__gray\" cx=\"45.7\" cy=\"10.7\" r=\"10.7\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;-3;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherCloudy };\n","import React from \"react\";\nimport \"./IconWeatherRain_1.scss\";\n\ninterface IIconWeatherRain_1Props {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherRain_1Props>;\n\nfunction IconWeatherRain_1({ addClassName = [\"\"] }: TProps) {\n    let componentClassName = [...addClassName, \"IconWeatherRain_1\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 60.7 60\"\n            className={componentClassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherRain_1__white\"\n                        d=\"M47.2,40H7.9C3.5,40,0,36.5,0,32.1l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9v0 C55.1,36.5,51.6,40,47.2,40z\"\n                    ></path>\n                    <circle className=\"IconWeatherRain_1__white\" cx=\"17.4\" cy=\"22.8\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherRain_1__white\" cx=\"34.5\" cy=\"21.1\" r=\"15.6\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;5;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <g>\n                    <path\n                        className=\"IconWeatherRain_1__gray\"\n                        d=\"M54.7,22.3H33.4c-3.3,0-6-2.7-6-6v0c0-3.3,2.7-6,6-6h21.3c3.3,0,6,2.7,6,6v0 C60.7,19.6,58,22.3,54.7,22.3z\"\n                    ></path>\n                    <circle className=\"IconWeatherRain_1__gray\" cx=\"45.7\" cy=\"10.7\" r=\"10.7\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;-3;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <g>\n                    <path\n                        className=\"IconWeatherRain_1__rain\"\n                        d=\"M26.4,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S26.4,50.2,26.4,51.9z\"\n                    ></path>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"4 0;4 10\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                    <animate\n                        attributeType=\"CSS\"\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        calcMode=\"linear\"\n                    ></animate>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherRain_1 };\n","import React from \"react\";\nimport \"./IconWeatherRain_2.scss\";\n\ninterface IIconWeatherRain_2Props {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherRain_2Props>;\n\nfunction IconWeatherRain_2({ addClassName = [\"\"] }: TProps) {\n    let componentClassName = [...addClassName, \"IconWeatherRain_2\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 60.7 60\"\n            className={componentClassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherRain_2__white\"\n                        d=\"M47.2,40H7.9C3.5,40,0,36.5,0,32.1l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9v0 C55.1,36.5,51.6,40,47.2,40z\"\n                    ></path>\n                    <circle className=\"IconWeatherRain_2__white\" cx=\"17.4\" cy=\"22.8\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherRain_2__white\" cx=\"34.5\" cy=\"21.1\" r=\"15.6\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;5;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <g>\n                    <path\n                        className=\"IconWeatherRain_2__gray\"\n                        d=\"M54.7,22.3H33.4c-3.3,0-6-2.7-6-6v0c0-3.3,2.7-6,6-6h21.3c3.3,0,6,2.7,6,6v0 C60.7,19.6,58,22.3,54.7,22.3z\"\n                    ></path>\n                    <circle className=\"IconWeatherRain_2__gray\" cx=\"45.7\" cy=\"10.7\" r=\"10.7\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;-3;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <g>\n                    <path\n                        className=\"IconWeatherRain_2__rain\"\n                        d=\"M26.4,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S26.4,50.2,26.4,51.9z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherRain_2__rain\"\n                        d=\"M36.3,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S36.3,50.2,36.3,51.9z\"\n                    ></path>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"2 0;2 10\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                    <animate\n                        attributeType=\"CSS\"\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        calcMode=\"linear\"\n                    ></animate>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherRain_2 };\n","import React from \"react\";\nimport \"./IconWeatherRain_3.scss\";\n\ninterface IIconWeatherRain_3Props {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherRain_3Props>;\n\nfunction IconWeatherRain_3({ addClassName = [\"\"] }: TProps) {\n    let componentClassName = [...addClassName, \"IconWeatherRain_3\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 60.7 60\"\n            className={componentClassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherRain_3__white\"\n                        d=\"M47.2,40H7.9C3.5,40,0,36.5,0,32.1l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9v0 C55.1,36.5,51.6,40,47.2,40z\"\n                    ></path>\n                    <circle className=\"IconWeatherRain_3__white\" cx=\"17.4\" cy=\"22.8\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherRain_3__white\" cx=\"34.5\" cy=\"21.1\" r=\"15.6\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;5;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <g>\n                    <path\n                        className=\"IconWeatherRain_3__gray\"\n                        d=\"M54.7,22.3H33.4c-3.3,0-6-2.7-6-6v0c0-3.3,2.7-6,6-6h21.3c3.3,0,6,2.7,6,6v0 C60.7,19.6,58,22.3,54.7,22.3z\"\n                    ></path>\n                    <circle className=\"IconWeatherRain_3__gray\" cx=\"45.7\" cy=\"10.7\" r=\"10.7\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;-3;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <g>\n                    <path\n                        className=\"IconWeatherRain_3__rain\"\n                        d=\"M26.4,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S26.4,50.2,26.4,51.9z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherRain_3__rain\"\n                        d=\"M36.3,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S36.3,50.2,36.3,51.9z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherRain_3__rain\"\n                        d=\"M46.3,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S46.3,50.2,46.3,51.9z\"\n                    ></path>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0 0;0 10\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                    <animate\n                        attributeType=\"CSS\"\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        calcMode=\"linear\"\n                    ></animate>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherRain_3 };\n","import React from \"react\";\nimport \"./IconWeatherThunder.scss\";\n\ninterface IIconWeatherThunderProps {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherThunderProps>;\n\nfunction IconWeatherThunder({ addClassName = [\"\"] }: TProps) {\n    let componentClassName = [...addClassName, \"IconWeatherThunder\"].join(\" \");\n    return (\n        // <svg\n        //     version=\"1.1\"\n        //     xmlns=\"http://www.w3.org/2000/svg\"\n        //     xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        //     x=\"0px\"\n        //     y=\"0px\"\n        //     viewBox=\"0 0 60.7 80\"\n        //     className={componentClassName}\n        //     xmlSpace=\"preserve\"\n        // >\n        //     <g>\n        //         <g>\n        //             <path\n        //                 className=\"IconWeatherThunder__white\"\n        //                 d=\"M47.2,40H7.9C3.5,40,0,36.5,0,32.1l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9v0 C55.1,36.5,51.6,40,47.2,40z\"\n        //             ></path>\n        //             <circle className=\"IconWeatherThunder__white\" cx=\"17.4\" cy=\"22.8\" r=\"9.3\"></circle>\n        //             <circle className=\"IconWeatherThunder__white\" cx=\"34.5\" cy=\"21.1\" r=\"15.6\"></circle>\n        //         </g>\n        //         <g>\n        //             <path\n        //                 className=\"IconWeatherThunder__gray\"\n        //                 d=\"M54.7,22.3H33.4c-3.3,0-6-2.7-6-6v0c0-3.3,2.7-6,6-6h21.3c3.3,0,6,2.7,6,6v0 C60.7,19.6,58,22.3,54.7,22.3z\"\n        //             ></path>\n        //             <circle className=\"IconWeatherThunder__gray\" cx=\"45.7\" cy=\"10.7\" r=\"10.7\"></circle>\n        //             <animateTransform\n        //                 attributeName=\"transform\"\n        //                 attributeType=\"XML\"\n        //                 dur=\"6s\"\n        //                 keyTimes=\"0;0.5;1\"\n        //                 repeatCount=\"indefinite\"\n        //                 type=\"translate\"\n        //                 values=\"0;-3;0\"\n        //                 calcMode=\"linear\"\n        //             ></animateTransform>\n        //         </g>\n        //         <g>\n        //             <path\n        //                 className=\"IconWeatherThunder__yellow\"\n        //                 d=\"M43.6,22.7c-0.2,0.6-0.4,1.3-0.6,1.9c-0.2,0.6-0.4,1.2-0.7,1.8c-0.4,1.2-0.9,2.4-1.5,3.5\n        //     c-1,2.3-2.2,4.6-3.4,6.8l-1.7-2.9c3.2-0.1,6.3-0.1,9.5,0l3,0.1l-1.3,2.5c-1.1,2.1-2.2,4.2-3.5,6.2c-0.6,1-1.3,2-2,3\n        //     c-0.7,1-1.4,2-2.2,2.9c0.2-1.2,0.5-2.4,0.8-3.5c0.3-1.2,0.6-2.3,1-3.4c0.7-2.3,1.5-4.5,2.4-6.7l1.7,2.7c-3.2,0.1-6.3,0.2-9.5,0\n        //     l-3.4-0.1l1.8-2.8c1.4-2.1,2.8-4.2,4.3-6.2c0.8-1,1.6-2,2.4-3c0.4-0.5,0.8-1,1.3-1.5C42.7,23.7,43.1,23.2,43.6,22.7z\"\n        //             ></path>\n        //             <animate\n        //                 attributeType=\"CSS\"\n        //                 attributeName=\"opacity\"\n        //                 dur=\"1.5s\"\n        //                 keyTimes=\"0;0.5;1\"\n        //                 repeatCount=\"indefinite\"\n        //                 values=\"1;0;1\"\n        //                 calcMode=\"linear\"\n        //             ></animate>\n        //         </g>\n        //         <g>\n        //             <path\n        //                 className=\"IconWeatherThunder__rain\"\n        //                 d=\"M36.3,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S36.3,50.2,36.3,51.9z\"\n        //             ></path>\n        //             <path\n        //                 className=\"IconWeatherThunder__rain\"\n        //                 d=\"M26.4,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S26.4,50.2,26.4,51.9z\"\n        //             ></path>\n        //             <path\n        //                 className=\"IconWeatherThunder__rain\"\n        //                 d=\"M15.7,51.9c0,1.7-1.4,3.1-3.1,3.1s-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S15.7,50.2,15.7,51.9z\"\n        //             ></path>\n        //             <animateTransform\n        //                 attributeName=\"transform\"\n        //                 attributeType=\"XML\"\n        //                 dur=\"1s\"\n        //                 keyTimes=\"0;1\"\n        //                 repeatCount=\"indefinite\"\n        //                 type=\"translate\"\n        //                 values=\"0 0;0 10\"\n        //                 calcMode=\"linear\"\n        //             ></animateTransform>\n        //             <animate\n        //                 attributeType=\"CSS\"\n        //                 attributeName=\"opacity\"\n        //                 dur=\"1s\"\n        //                 keyTimes=\"0;1\"\n        //                 repeatCount=\"indefinite\"\n        //                 values=\"1;0\"\n        //                 calcMode=\"linear\"\n        //             ></animate>\n        //         </g>\n        //     </g>\n        // </svg>\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 60.7 60\"\n            className={componentClassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherRain_3__white\"\n                        d=\"M47.2,40H7.9C3.5,40,0,36.5,0,32.1l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9v0 C55.1,36.5,51.6,40,47.2,40z\"\n                    ></path>\n                    <circle className=\"IconWeatherThunder__white\" cx=\"17.4\" cy=\"22.8\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherThunder__white\" cx=\"34.5\" cy=\"21.1\" r=\"15.6\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;5;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <g>\n                    <path\n                        className=\"IconWeatherThunder__gray\"\n                        d=\"M54.7,22.3H33.4c-3.3,0-6-2.7-6-6v0c0-3.3,2.7-6,6-6h21.3c3.3,0,6,2.7,6,6v0 C60.7,19.6,58,22.3,54.7,22.3z\"\n                    ></path>\n                    <circle className=\"IconWeatherThunder__gray\" cx=\"45.7\" cy=\"10.7\" r=\"10.7\"></circle>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"6s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0;-3;0\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </g>\n                <g>\n                    <path\n                        className=\"IconWeatherThunder__rain\"\n                        d=\"M26.4,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S26.4,50.2,26.4,51.9z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherThunder__rain\"\n                        d=\"M36.3,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S36.3,50.2,36.3,51.9z\"\n                    ></path>\n                    <path\n                        className=\"IconWeatherThunder__rain\"\n                        d=\"M46.3,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S46.3,50.2,46.3,51.9z\"\n                    ></path>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"0 0;0 10\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                    <animate\n                        attributeType=\"CSS\"\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        calcMode=\"linear\"\n                    ></animate>\n                </g>\n                <g>\n                    <path\n                        className=\"IconWeatherThunder__yellow\"\n                        d=\"M43.6,22.7c-0.2,0.6-0.4,1.3-0.6,1.9c-0.2,0.6-0.4,1.2-0.7,1.8c-0.4,1.2-0.9,2.4-1.5,3.5\n      \t\t\tc-1,2.3-2.2,4.6-3.4,6.8l-1.7-2.9c3.2-0.1,6.3-0.1,9.5,0l3,0.1l-1.3,2.5c-1.1,2.1-2.2,4.2-3.5,6.2c-0.6,1-1.3,2-2,3\n      \t\t\tc-0.7,1-1.4,2-2.2,2.9c0.2-1.2,0.5-2.4,0.8-3.5c0.3-1.2,0.6-2.3,1-3.4c0.7-2.3,1.5-4.5,2.4-6.7l1.7,2.7c-3.2,0.1-6.3,0.2-9.5,0\n      \t\t\tl-3.4-0.1l1.8-2.8c1.4-2.1,2.8-4.2,4.3-6.2c0.8-1,1.6-2,2.4-3c0.4-0.5,0.8-1,1.3-1.5C42.7,23.7,43.1,23.2,43.6,22.7z\"\n                    ></path>\n                    <animate\n                        attributeType=\"CSS\"\n                        attributeName=\"opacity\"\n                        dur=\"1.5s\"\n                        keyTimes=\"0;0.5;1\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0;1\"\n                        calcMode=\"linear\"\n                    ></animate>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherThunder };\n","import React from \"react\";\nimport \"./IconWeatherSnowRain.scss\";\n\ninterface IIconWeatherSnowRainProps {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherSnowRainProps>;\n\nfunction IconWeatherSnowRain({ addClassName = [\"\"] }: TProps) {\n    let componentclassName = [...addClassName, \"IconWeatherSnowRain\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 55.1 52.5\"\n            className={componentclassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherSnowRain__white\"\n                        d=\"M47.2,34.5H7.9c-4.3,0-7.9-3.5-7.9-7.9l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9 v0C55.1,30.9,51.6,34.5,47.2,34.5z\"\n                    ></path>\n                    <circle className=\"IconWeatherSnowRain__white\" cx=\"17.4\" cy=\"17.3\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherSnowRain__white\" cx=\"34.5\" cy=\"15.6\" r=\"15.6\"></circle>\n                </g>\n                <circle className=\"IconWeatherSnowRain__snow\" cx=\"37\" cy=\"43.5\" r=\"3\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1.5s\"\n                        keyTimes=\"0;0.33;0.66;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"-4 -2;-2 2; -2 4; -3 6\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </circle>\n                <g>\n                    <path\n                        className=\"IconWeatherSnowRain__rain\"\n                        d=\"M36.3,51.9c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,3.1-7.8,3.1-7.8 S36.3,50.2,36.3,51.9z\"\n                    ></path>\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"-12 -5;-12 5\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                    <animate\n                        attributeType=\"CSS\"\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        calcMode=\"linear\"\n                    ></animate>\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherSnowRain };\n","import React from \"react\";\nimport \"./IconWeatherSnow_1.scss\";\n\ninterface IIconWeatherSnow_1Props {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherSnow_1Props>;\n\nfunction IconWeatherSnow_1({ addClassName = [\"\"] }: TProps) {\n    let componentclassName = [...addClassName, \"IconWeatherSnow_1\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 55.1 52.5\"\n            className={componentclassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherSnow_1__white\"\n                        d=\"M47.2,34.5H7.9c-4.3,0-7.9-3.5-7.9-7.9l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9 v0C55.1,30.9,51.6,34.5,47.2,34.5z\"\n                    ></path>\n                    <circle className=\"IconWeatherSnow_1__white\" cx=\"17.4\" cy=\"17.3\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherSnow_1__white\" cx=\"34.5\" cy=\"15.6\" r=\"15.6\"></circle>\n                </g>\n                {/* <circle className=\"IconWeatherSnow_1__snow\" cx=\"37\" cy=\"43.5\" r=\"3\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1.5s\"\n                        keyTimes=\"0;0.33;0.66;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"1 -2;3 2; 1 4; 2 6\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </circle> */}\n                <circle className=\"IconWeatherSnow_1__snow\" cx=\"27\" cy=\"43.5\" r=\"3\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1.5s\"\n                        keyTimes=\"0;0.33;0.66;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"1 -2;3 2; 1 4; 2 6\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </circle>\n                {/* <circle className=\"IconWeatherSnow_1__snow\" cx=\"17\" cy=\"43.5\" r=\"3\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1.5s\"\n                        keyTimes=\"0;0.33;0.66;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"1 -2;3 2; 1 4; 2 6\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </circle> */}\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherSnow_1 };\n","import React from \"react\";\nimport \"./IconWeatherSnow_2.scss\";\n\ninterface IIconWeatherSnow_2Props {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherSnow_2Props>;\n\nfunction IconWeatherSnow_2({ addClassName = [\"\"] }: TProps) {\n    let componentclassName = [...addClassName, \"IconWeatherSnow_2\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 55.1 52.5\"\n            className={componentclassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherSnow_2__white\"\n                        d=\"M47.2,34.5H7.9c-4.3,0-7.9-3.5-7.9-7.9l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9 v0C55.1,30.9,51.6,34.5,47.2,34.5z\"\n                    ></path>\n                    <circle className=\"IconWeatherSnow_2__white\" cx=\"17.4\" cy=\"17.3\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherSnow_2__white\" cx=\"34.5\" cy=\"15.6\" r=\"15.6\"></circle>\n                </g>\n                <circle className=\"IconWeatherSnow_2__snow\" cx=\"37\" cy=\"43.5\" r=\"3\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1.5s\"\n                        keyTimes=\"0;0.33;0.66;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"-4 -2;-2 2; -2 4; -3 6\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </circle>\n                <circle className=\"IconWeatherSnow_2__snow\" cx=\"27\" cy=\"43.5\" r=\"3\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1.5s\"\n                        keyTimes=\"0;0.33;0.66;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"-4 -2;-2 2; -4 4; -3 6\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </circle>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherSnow_2 };\n","import React from \"react\";\nimport \"./IconWeatherSnow_3.scss\";\n\ninterface IIconWeatherSnow_3Props {\n    addClassName?: string[];\n}\n\ntype TProps = Readonly<IIconWeatherSnow_3Props>;\n\nfunction IconWeatherSnow_3({ addClassName = [\"\"] }: TProps) {\n    let componentclassName = [...addClassName, \"IconWeatherSnow_3\"].join(\" \");\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 55.1 52.5\"\n            className={componentclassName}\n            xmlSpace=\"preserve\"\n        >\n            <g>\n                <g>\n                    <path\n                        className=\"IconWeatherSnow_3__white\"\n                        d=\"M47.2,34.5H7.9c-4.3,0-7.9-3.5-7.9-7.9l0,0c0-4.3,3.5-7.9,7.9-7.9h39.4c4.3,0,7.9,3.5,7.9,7.9 v0C55.1,30.9,51.6,34.5,47.2,34.5z\"\n                    ></path>\n                    <circle className=\"IconWeatherSnow_3__white\" cx=\"17.4\" cy=\"17.3\" r=\"9.3\"></circle>\n                    <circle className=\"IconWeatherSnow_3__white\" cx=\"34.5\" cy=\"15.6\" r=\"15.6\"></circle>\n                </g>\n                <circle className=\"IconWeatherSnow_3__snow\" cx=\"37\" cy=\"43.5\" r=\"3\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1.5s\"\n                        keyTimes=\"0;0.33;0.66;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"1 -2;3 2; 1 4; 2 6\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </circle>\n                <circle className=\"IconWeatherSnow_3__snow\" cx=\"27\" cy=\"43.5\" r=\"3\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1.5s\"\n                        keyTimes=\"0;0.33;0.66;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"1 -2;3 2; 1 4; 2 6\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </circle>\n                <circle className=\"IconWeatherSnow_3__snow\" cx=\"17\" cy=\"43.5\" r=\"3\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        dur=\"1.5s\"\n                        keyTimes=\"0;0.33;0.66;1\"\n                        repeatCount=\"indefinite\"\n                        type=\"translate\"\n                        values=\"1 -2;3 2; 1 4; 2 6\"\n                        calcMode=\"linear\"\n                    ></animateTransform>\n                </circle>\n            </g>\n        </svg>\n    );\n}\n\nexport { IconWeatherSnow_3 };\n","import React from \"react\";\nimport \"./WeatherIcon.scss\";\nimport type { TResponse, TresponseObjWeatherObj } from \"../../utils/fetch_current_weather\";\nimport { IconWeatherClearDay } from \"../../ui/IconWeatherClearDay\";\nimport { IconWeatherClearNight } from \"../../ui/IconWeatherClearNight\";\nimport { IconWeatherCloudyDay } from \"../../ui/IconWeatherCloudyDay\";\nimport { IconWeatherCloudyNight } from \"../../ui/IconWeatherCloudyNight\";\nimport { IconWeatherCloudy } from \"../../ui/IconWeatherCloudy\";\nimport { IconWeatherRain_1 } from \"../../ui/IconWeatherRain_1\";\nimport { IconWeatherRain_2 } from \"../../ui/IconWeatherRain_2\";\nimport { IconWeatherRain_3 } from \"../../ui/IconWeatherRain_3\";\nimport { IconWeatherThunder } from \"../../ui/IconWeatherThunder\";\nimport { IconWeatherSnowRain } from \"../../ui/IconWeatherSnowRain\";\nimport { IconWeatherSnow_1 } from \"../../ui/IconWeatherSnow_1\";\nimport { IconWeatherSnow_2 } from \"../../ui/IconWeatherSnow_2\";\nimport { IconWeatherSnow_3 } from \"../../ui/IconWeatherSnow_3\";\nimport { calc_weather_day_time, calc_sun_hours_details } from \"../../utils/util_functions\";\n\ninterface IWeatherIconProps {\n    addClassName?: string[];\n    weather_data: {\n        sunrise: number;\n        sunset: number;\n        timezone: number;\n        dt: number;\n        weather_id: TresponseObjWeatherObj[\"id\"];\n    };\n}\n\ntype TProps = Readonly<IWeatherIconProps>;\n\nfunction renderIcon(weather_data: IWeatherIconProps[\"weather_data\"]) {\n    const day_time_datails = calc_sun_hours_details(weather_data.sunrise, weather_data.sunset, weather_data.timezone);\n    const day_time = calc_weather_day_time(day_time_datails, { dt: weather_data.dt, timezone: weather_data.timezone });\n    const weather_detail_id = weather_data.weather_id; // тут мы более детально можем определить погоднрые условия (подробние в типизации API)\n\n    // чистое небо (днем или ночью)\n    if (weather_detail_id === 800 || weather_detail_id === 801 || (weather_detail_id >= 701 && weather_detail_id <= 762)) {\n        if (day_time == \"NIGHT\") {\n            return <IconWeatherClearNight addClassName={[\"WeatherIcon__icon\"]} />;\n        }\n        return <IconWeatherClearDay addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n\n    // облачность (днем или ночью)\n    if ((weather_detail_id >= 771 && weather_detail_id <= 781) || weather_detail_id === 802 || weather_detail_id === 803) {\n        if (day_time == \"NIGHT\") {\n            return <IconWeatherCloudyNight addClassName={[\"WeatherIcon__icon\"]} />;\n        }\n        return <IconWeatherCloudyDay addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n\n    // большая облачность\n    if (weather_detail_id === 804) {\n        return <IconWeatherCloudy addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n\n    // небольшой дождь\n    if ((weather_detail_id >= 300 && weather_detail_id <= 321) || weather_detail_id === 500) {\n        return <IconWeatherRain_1 addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n    // дождь\n    if (weather_detail_id === 501 || weather_detail_id === 502 || weather_detail_id === 511 || weather_detail_id === 504) {\n        return <IconWeatherRain_2 addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n\n    // большой дождь\n    if (\n        weather_detail_id === 503 ||\n        weather_detail_id === 520 ||\n        weather_detail_id === 521 ||\n        weather_detail_id === 522 ||\n        weather_detail_id === 531\n    ) {\n        return <IconWeatherRain_3 addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n\n    // большой дождь с грозой\n    if (weather_detail_id >= 200 && weather_detail_id <= 232) {\n        return <IconWeatherThunder addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n\n    // небольшой снег\n    if (weather_detail_id === 600) {\n        return <IconWeatherSnow_1 addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n\n    // снег\n    if (weather_detail_id === 601 || weather_detail_id === 611) {\n        return <IconWeatherSnow_2 addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n\n    // сильный снег\n    if (weather_detail_id === 602) {\n        return <IconWeatherSnow_3 addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n\n    // снег + дождь\n    if (weather_detail_id >= 612 && weather_detail_id <= 622) {\n        return <IconWeatherSnowRain addClassName={[\"WeatherIcon__icon\"]} />;\n    }\n\n    console.warn(`Необработанный погодный ID:${weather_detail_id}`);\n    return <IconWeatherCloudy addClassName={[\"WeatherIcon__icon\"]} />;\n}\n\nfunction WeatherIcon({ addClassName = [\"\"], weather_data }: TProps) {\n    const componentClassName = [...addClassName, \"WeatherIcon\"].join(\" \");\n    return <div className={componentClassName}>{renderIcon(weather_data)}</div>;\n}\n\nexport { WeatherIcon };\n","import React from \"react\";\nimport \"./WeatherBaseInfo.scss\";\n\nimport type { TresponseObjWeatherObj } from \"../../utils/fetch_current_weather\";\nimport { WeatherIcon } from \"../WeatherIcon/WeatherIcon\";\n\n// базовая инфа, значок погоды + короткое описание + температура + как ощущается\n\ninterface IWeatherBaseInfoProps {\n    addClassName?: string[];\n    weather_data: {\n        sunrise: number;\n        sunset: number;\n        timezone: number;\n        dt: number;\n        weather_id: TresponseObjWeatherObj[\"id\"];\n        temp: number;\n        feels_like: number;\n        description: string;\n    };\n}\n\ntype TProps = Readonly<IWeatherBaseInfoProps>;\n\nfunction WeatherBaseInfo({ addClassName = [\"\"], weather_data }: TProps) {\n    const componentClassName = [...addClassName, \"WeatherBaseInfo\"].join(\" \");\n    return (\n        <div className={componentClassName}>\n            <p className=\"WeatherBaseInfo__desc\">{weather_data.description}</p>\n            <WeatherIcon\n                weather_data={{\n                    sunrise: weather_data.sunrise,\n                    sunset: weather_data.sunset,\n                    timezone: weather_data.timezone,\n                    dt: weather_data.dt,\n                    weather_id: weather_data.weather_id,\n                }}\n            />\n            <div className=\"WeatherBaseInfo__temp_wrapper\">\n                <span className=\"WeatherBaseInfo__temp\">{`${weather_data.temp.toFixed(1)}`}°c</span>\n                <span className=\"WeatherBaseInfo__temp_feels_like\">{`Ощущается как: ${weather_data.feels_like.toFixed(1)}`}°c</span>\n            </div>\n        </div>\n    );\n}\n\nexport { WeatherBaseInfo };\n","import React from \"react\";\nimport \"./WeatherAltInfoTemplate.scss\";\n\n// будем показывать количество осадков если они есть.\n\ninterface IWeatherAltInfoTemplateProps {\n    addClassName?: string[];\n    newClassName?: string;\n    slot_header?: React.ReactNode;\n    slot_main?: React.ReactNode;\n    slot_dop?: React.ReactNode;\n    onClick?: (event: React.MouseEvent, data_id: string) => void;\n    data_id?: string;\n}\n\ntype TProps = Readonly<IWeatherAltInfoTemplateProps>;\n\nfunction WeatherAltInfoTemplate({\n    addClassName = [\"\"],\n    newClassName,\n    slot_header,\n    slot_main,\n    slot_dop,\n    onClick = () => {},\n    data_id = \"\",\n}: TProps) {\n    const componentClassName = newClassName ?? [...addClassName, \"WeatherAltInfoTemplate\"].join(\" \");\n\n    const componentOnClick = (e: React.MouseEvent) => {\n        onClick(e, data_id);\n    };\n\n    return (\n        <div className={componentClassName} onClick={componentOnClick}>\n            {slot_header ? <p className=\"WeatherAltInfoTemplate__head\">{slot_header}</p> : null}\n\n            {slot_main || slot_dop ? (\n                <div className=\"WeatherAltInfoTemplate__content_wrapper\">\n                    {slot_main ? <div className=\"WeatherAltInfoTemplate__content_main\">{slot_main}</div> : null}\n                    {slot_dop ? <div className=\"WeatherAltInfoTemplate__content_dop\">{slot_dop}</div> : null}\n                </div>\n            ) : null}\n        </div>\n    );\n}\n\nexport { WeatherAltInfoTemplate };\n","import { deep_array_is_equal } from \"./is_equal\";\n\ntype TanyFunc = (...args: any[]) => any;\n\ninterface ICallStackElement {\n    argum: any[];\n}\n\n/* \n\n    декоратор, не позволяет вызывать функцию непрерывно, вместо этого накопливает параметры вызовов\n    функции (func) и по интервалу delay вызывает func асинхронно столько раз сколько мы ее вызывали, с темиже параметрами.\n\n    После выполнения всего стека вызовов будет вызвана функция (callback) которую\n    мы должны указать.\n*/\nfunction caller_delay_callback<T extends TanyFunc>(func: T, callback = () => {}, delay: number = 0) {\n    let call_stack: ICallStackElement[] = [];\n    let is_start: boolean = false;\n\n    return function caller(...args: Parameters<T>): void {\n        call_stack.push({ argum: args });\n\n        const func_call = () => {\n            if (call_stack.length >= 1) {\n                let { argum } = call_stack.shift() as ICallStackElement; // трудоемкая процедура\n                func(...argum);\n                setTimeout(func_call, delay);\n            } else {\n                is_start = false;\n                callback();\n            }\n        };\n\n        if (!is_start) {\n            is_start = true; // выставляем флаг работы\n            setTimeout(func_call, delay);\n        }\n    };\n}\n\n/*\n    не позволяет вызывать функцию непрерывно, вместо этого вызывает функцию с последними переданными аргументами\n    delay это милисекунды в течении которых вызов функции будет обновлять последние переданные аргументы\n    и сбрасывать delay\n\n    После выполнения оборачиваемой функции будет вызвана функция (callback) которую\n    мы должны указать.\n*/\nfunction first_caller_delay_callback<T extends TanyFunc>(func: T, callback = () => {}, delay: number = 0) {\n    let call_stack: ICallStackElement;\n    let is_start: boolean = false;\n    let timer_id: any = 0;\n\n    return function caller(...args: Parameters<T>): void {\n        call_stack = { argum: args };\n\n        const func_call = () => {\n            let { argum } = call_stack as ICallStackElement; // трудоемкая процедура\n            func(...argum);\n            is_start = false;\n            callback();\n        };\n\n        if (is_start) {\n            clearTimeout(timer_id);\n        }\n\n        is_start = true; // выставляем флаг работы\n        timer_id = setTimeout(func_call, delay);\n    };\n}\n\n/*\n    декоратор, не позволяет вызывать функцию непрерывно, вместо этого функция будет вызыватся с \n    задержкой delay ms, с последними переданными параметрами функции\n    вызов функции до истечения delay приведет к обновлению переданных ранее параметров на новые.\n\n    После выполнения оборачиваемой функции будет вызвана функция (callback) которую\n    мы должны указать.\n\n    вроде это - Debounce\n*/\n\nfunction low_update_decorator<T extends TanyFunc>(func: T, callback = () => {}, delay: number = 100) {\n    let call_stack: ICallStackElement;\n    let is_start: boolean = false;\n\n    return function caller(...args: Parameters<T>): void {\n        call_stack = { argum: args };\n\n        if (is_start) {\n            return;\n        }\n\n        const func_call = () => {\n            let { argum } = call_stack as ICallStackElement; // трудоемкая процедура\n            func(...argum);\n            is_start = false;\n            callback();\n        };\n\n        is_start = true; // выставляем флаг работы\n        setTimeout(func_call, delay);\n    };\n}\n\n/*\n    декоратор для кеширования значений возвращаемых функциями.\n*/\nfunction cache_decorator<T extends TanyFunc, R extends ReturnType<T>>(func: T) {\n    type TCacheItem = {\n        params: Parameters<T>;\n        result: R;\n    };\n\n    const ERR_RESPONSE = \"!! decorators.is_cached: value not cached !!\";\n    let cache: TCacheItem[] = [];\n\n    const get_cached = (args: Parameters<T>): typeof ERR_RESPONSE | TCacheItem => {\n        // на случай если одним из аргументов будет обьект ссылающийся сам на себя, тогда в deep_array_is_equal будет исключение\n        try {\n            for (let cache_item of cache) {\n                if (deep_array_is_equal(cache_item.params, args)) {\n                    return cache_item;\n                }\n            }\n        } catch {\n            return ERR_RESPONSE;\n        }\n        return ERR_RESPONSE;\n    };\n\n    return (...args: Parameters<T>) => {\n        let result: R;\n        let is_value_cache = get_cached(args);\n\n        if (is_value_cache === ERR_RESPONSE) {\n            result = func(...args);\n            cache.push({ params: args, result: result });\n        } else {\n            result = is_value_cache.result;\n        }\n\n        return result;\n    };\n}\n\nexport { caller_delay_callback, first_caller_delay_callback, low_update_decorator, cache_decorator };\n","import React, { useEffect, useState, useRef, useCallback, useLayoutEffect } from \"react\";\nimport \"./HoverHint.scss\";\nimport { Portal } from \"../Portal/Portal\";\nimport { GetElementOffsetsInDocument, add_to_macro_stack } from \"../../utils/util_functions\";\nimport { first_caller_delay_callback } from \"../../utils/decorators\";\n\n// HOC добавляет внутреннему элементу всплывающее окно с текстом, при наведении курсора или при клике\n// расчитано что внутрь этого HOC будет помещен только один дочерний эемент. Если более одного то всплывающее окошко\n// будет добавлено только первому дочернему элементу\n\ninterface IHoverHintProps {\n    children: React.ReactElement;\n    hoverText?: React.ReactNode; // текст всплывающего окна\n    gap_vertical?: number; // нужный отступ по вертикали\n    gap_horizontal?: number; // нужный отступ по горизонтали\n    start_delay?: number; // задержка перед появленрием\n    end_delay?: number; // задержка перед закрытием\n}\n\ntype TProps = Readonly<IHoverHintProps>;\n\n// всякие данные для события hover\ntype THoverData = {\n    cursor_x: number; // координаты курсора мыши\n    cursor_y: number;\n    target_w: number; // ширина и высота элемента на который повешан обработчик события\n    target_h: number;\n    target_document_left: number; // смещение элемента относительно ДОКУМЕНТА, на который повешан обработчик события\n    target_document_top: number;\n    target_vp_left: number; // смещение элемента относительно ВЪЮПОРТА, на который повешан обработчик события\n    target_vp_top: number;\n    hint_w: number; // ширина и высота всплывающего окна\n    hint_h: number;\n    to_render_hint_top: boolean; // можноли отрендерить его сверху целоевого элемента\n};\n\nfunction HoverHint({ children, hoverText = \"\", gap_vertical = 5, gap_horizontal = 0, start_delay = 1000, end_delay = 6000 }: TProps) {\n    const [isHover, setIsHover] = useState<boolean>(false); // показываетсяли подсказка\n    const isHoverOut = useRef<boolean>(false); // курсор покинул элемент\n    const hintRef = useRef<HTMLDivElement>(null); // ссылка на элемент с подсказкой\n    const hoverHintRef = useRef<HTMLDivElement>(null); // ссылка на этот компонент в DOM\n    const hoverData = useRef<THoverData>({\n        cursor_x: 0,\n        cursor_y: 0,\n        target_w: 0,\n        target_h: 0,\n        target_document_left: 0,\n        target_document_top: 0,\n        target_vp_left: 0,\n        target_vp_top: 0,\n        hint_w: 0,\n        hint_h: 0,\n        to_render_hint_top: false,\n    });\n\n    // курсор наводится на элемент, ллибо клик по элементу на мобиле\n    const onEnter = useCallback(\n        (e: MouseEvent) => {\n            if (isHover) return;\n            // обновим данные в hoverData\n            isHoverOut.current = false;\n            let taget_data = (e.currentTarget as HTMLElement).getBoundingClientRect();\n            let offsets = GetElementOffsetsInDocument(e.currentTarget as HTMLElement);\n\n            hoverData.current = {\n                ...hoverData.current,\n                target_w: Math.floor(taget_data.width),\n                target_h: Math.floor(taget_data.height),\n                target_document_left: offsets.left,\n                target_document_top: offsets.top,\n                target_vp_left: taget_data.left,\n                target_vp_top: taget_data.top,\n            };\n\n            // показ подсказки с задержкой\n            const updateHover = first_caller_delay_callback(\n                () => {\n                    if (isHoverOut.current) return;\n                    add_to_macro_stack(setIsHover, true);\n                },\n                () => {},\n                start_delay\n            );\n\n            // решаем как показать подсказку, с задержкой или нет\n            if (e.type && e.type === \"click\") {\n                add_to_macro_stack(setIsHover, true);\n            } else {\n                updateHover();\n            }\n        },\n\n        []\n    );\n\n    // курсор уходит с эемента\n    const onOut = () => {\n        isHoverOut.current = true;\n        add_to_macro_stack(setIsHover, false);\n    };\n\n    // курсор движется над элементом\n    const onMove = (e: React.MouseEvent) => {\n        if (isHover) {\n            hoverData.current = {\n                ...hoverData.current,\n                cursor_x: e.nativeEvent.x,\n                cursor_y: e.nativeEvent.y,\n            };\n        }\n    };\n\n    useEffect(() => {\n        if (isHover) {\n            // обновляем данные в hoverData\n            const update_hint_data = () => {\n                let hint_data = hintRef.current!.getBoundingClientRect();\n                let to_render_hint_top = hoverData.current.target_vp_top - gap_vertical >= Math.floor(hint_data.height);\n\n                hoverData.current = {\n                    ...hoverData.current,\n                    hint_h: Math.floor(hint_data.height),\n                    hint_w: Math.floor(hint_data.width),\n                    to_render_hint_top: to_render_hint_top,\n                };\n            };\n\n            update_hint_data();\n\n            // расчитываем положение подсказки на экране\n            const calcHintPositionTop = () => {\n                if (hoverData.current.to_render_hint_top) {\n                    return hoverData.current.target_vp_top + window.scrollY - hoverData.current.hint_h - gap_vertical;\n                }\n\n                return hoverData.current.target_vp_top + window.scrollY + hoverData.current.target_h + gap_vertical;\n            };\n\n            const calcHintPositionLeft = () => {\n                let pos_left =\n                    hoverData.current.target_vp_left +\n                    window.scrollX +\n                    hoverData.current.target_w / 2 -\n                    hoverData.current.hint_w / 2 +\n                    gap_horizontal;\n\n                if (pos_left < 0) {\n                    pos_left = 0;\n                }\n\n                if (pos_left + hoverData.current.hint_w > document.body.clientWidth) {\n                    pos_left = pos_left - Math.abs(pos_left + hoverData.current.hint_w - document.body.clientWidth);\n                }\n\n                return pos_left;\n            };\n\n            const setHintPosition = () => {\n                hintRef.current!.style.left = `${calcHintPositionLeft()}px`;\n                hintRef.current!.style.top = `${calcHintPositionTop()}px`;\n            };\n\n            setHintPosition();\n\n            // добавим стрелочку в начале или конце блока подсказки\n            // расчитываем ее позицию\n\n            const render_arrow = () => {\n                let arrow: HTMLDivElement;\n                let pos_left: number = 0;\n\n                if (hoverData.current.to_render_hint_top) {\n                    arrow = hintRef.current!.querySelector(\".HoverHint__after\") as HTMLDivElement;\n                    arrow.classList.add(\"HoverHint__after--active\");\n                } else {\n                    arrow = hintRef.current!.querySelector(\".HoverHint__before\") as HTMLDivElement;\n                    arrow.classList.add(\"HoverHint__before--active\");\n                }\n\n                pos_left =\n                    hoverData.current.target_vp_left +\n                    window.scrollX +\n                    hoverData.current.target_w / 2 -\n                    parseInt(hintRef.current!.style.left) -\n                    arrow.getBoundingClientRect().width / 2;\n                arrow.style.left = `${pos_left}px`;\n            };\n\n            render_arrow();\n\n            // при скролле и ресайзе будем выключать подсказку\n            const onScroll_or_onResize = () => {\n                if (isHover) {\n                    onOut();\n                }\n            };\n\n            document.addEventListener(\"scroll\", onScroll_or_onResize);\n            window.addEventListener(\"resize\", onScroll_or_onResize);\n\n            // заводим таймер для автовыключения подсказки\n            let timerId = setTimeout(() => {\n                if (isHover) {\n                    onOut();\n                }\n            }, end_delay);\n\n            return () => {\n                document.removeEventListener(\"scroll\", onScroll_or_onResize);\n                window.removeEventListener(\"resize\", onScroll_or_onResize);\n                clearTimeout(timerId);\n            };\n        }\n    }, [isHover]);\n\n    // вешаем нормальный обработчик на дочерний элемент этого компонента\n    // 1. реакт использует делегирование что не позволит заюзать e.currentTarget в onEnter\n    useEffect(() => {\n        (hoverHintRef.current!.children[0] as HTMLElement).addEventListener(\"mouseenter\", onEnter);\n        (hoverHintRef.current!.children[0] as HTMLElement).addEventListener(\"click\", onEnter);\n        (hoverHintRef.current!.children[0] as HTMLElement).addEventListener(\"mouseleave\", onOut);\n\n        return () => {\n            if (!hoverHintRef.current) return;\n            (hoverHintRef.current.children[0] as HTMLElement).removeEventListener(\"mouseenter\", onEnter);\n            (hoverHintRef.current.children[0] as HTMLElement).removeEventListener(\"click\", onEnter);\n            (hoverHintRef.current!.children[0] as HTMLElement).removeEventListener(\"mouseleave\", onOut);\n        };\n    }, [isHover]);\n\n    return (\n        <div className=\"HoverHint\" onMouseMove={onMove} ref={hoverHintRef}>\n            {children}\n            {isHover ? (\n                <Portal>\n                    <div className=\"HoverHint__hint\" ref={hintRef}>\n                        <div className=\"HoverHint__before\"></div>\n                        <div className=\"HoverHint__after\"></div>\n                        {hoverText}\n                    </div>\n                </Portal>\n            ) : null}\n        </div>\n    );\n}\n\nexport { HoverHint };\nexport type { IHoverHintProps };\n","import React from \"react\";\nimport \"./IconSunrise.scss\";\n\n// иконка для восхода\\захода солнца, sunrise=true восход,  sunrise=false заход\n\ninterface IIconSunriseProps {\n    addClassName?: string[];\n    sunrise: boolean;\n}\n\ntype TProps = Readonly<IIconSunriseProps>;\n\nfunction IconSunrise({ addClassName = [\"\"], sunrise }: TProps) {\n    let componentClassName = [...addClassName, \"IconSunrise\"].join(\" \");\n    return (\n        <svg className={componentClassName} viewBox=\"0 0 64 64\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path className=\"IconSunrise__sun\" d=\"M15,36a17,17,0,0,1,34,0\" />\n            <line className=\"IconSunrise__sun_r\" x1=\"32\" x2=\"32\" y1=\"9\" y2=\"15\" />\n            <line className=\"IconSunrise__sun_r\" x1=\"59\" x2=\"53\" y1=\"36\" y2=\"36\" />\n            <line className=\"IconSunrise__sun_r\" x1=\"11\" x2=\"5\" y1=\"36\" y2=\"36\" />\n            <line className=\"IconSunrise__sun_r\" x1=\"51.09\" x2=\"46.85\" y1=\"16.91\" y2=\"21.15\" />\n            <line className=\"IconSunrise__sun_r\" x1=\"17.15\" x2=\"12.91\" y1=\"21.15\" y2=\"16.91\" />\n            <line className=\"IconSunrise__horizon\" x1=\"5.5\" x2=\"58.5\" y1=\"37.5\" y2=\"37.5\" />\n            <line className=\"IconSunrise__horizon\" x1=\"41.5\" x2=\"54.5\" y1=\"43.5\" y2=\"43.5\" />\n            <line className=\"IconSunrise__horizon\" x1=\"9.5\" x2=\"22.5\" y1=\"43.5\" y2=\"43.5\" />\n            <line className={`IconSunrise__arrow ${sunrise ? \"\" : \"IconSunrise--invert\"}`} x1=\"32\" x2=\"32\" y1=\"55.74\" y2=\"43.74\" />\n            <polyline className={`IconSunrise__arrow ${sunrise ? \"\" : \"IconSunrise--invert\"}`} points=\"36.24 47.24 32 43 27.76 47.24\" />\n        </svg>\n    );\n}\n\nexport { IconSunrise };\n","import React, { useRef, useEffect } from \"react\";\nimport \"./WeatherSunPhase.scss\";\nimport { IconSunrise } from \"../../ui/IconSunrise\";\nimport { IconWeatherClearDay } from \"../../ui/IconWeatherClearDay\";\nimport { IconWeatherClearNight } from \"../../ui/IconWeatherClearNight\";\nimport { calc_sun_hours_details, addon_map, get_text_date } from \"../../utils/util_functions\";\nimport { first_caller_delay_callback } from \"../../utils/decorators\";\nimport { useHandleUpdate } from \"../../hooks/useHandleUpdate\";\nimport { HoverHint } from \"../../HOC/HoverHint/HoverHint\";\n\ninterface IWeatherSunPhaseProps {\n    addClassName?: string[];\n    cityTime: number;\n    cityTimezone: number;\n    sun_hours: ReturnType<typeof calc_sun_hours_details>;\n}\n\ntype TProps = Readonly<IWeatherSunPhaseProps>;\n\nfunction WeatherSunPhase({ addClassName = [\"\"], sun_hours, cityTime, cityTimezone }: TProps) {\n    const componentClassName = [...addClassName, \"WeatherSunPhase\"].join(\" \");\n    const fixed_timestamp = (cityTime + cityTimezone) * 1000;\n    const refVieport = useRef<HTMLDivElement>(null);\n    const refSunWrapper = useRef<HTMLDivElement>(null);\n    const refG2 = useRef<HTMLHRElement>(null);\n    const [handleupdate] = useHandleUpdate();\n\n    // расчитывает необходимый размер блока перед иконкой солнышка, так чтобы эта иконка была\n    // в указанном процентном соотношении относительно ширины вьюпорта компонента\n    // на вход приходит число в процентах, насколько требуется смистить иконку\n    const set_sun_offset = (needProcent: number) => {\n        if (!refVieport.current || !refSunWrapper.current || !refG2.current) return;\n        let fixed_procent = needProcent;\n        if (fixed_procent < 0) fixed_procent = 0;\n        if (fixed_procent > 100) fixed_procent = 100;\n\n        const iconWidth = refSunWrapper.current.clientWidth;\n        const vieportWidth = refVieport.current.clientWidth;\n\n        //const calcPixels = ((vieportWidth - iconWidth) / 100) * fixed_procent; // расчетное смещение в пикселях\n        const calcProcents = ((100 - iconWidth / (vieportWidth / 100)) / 100) * fixed_procent; // расчетное смещение в процентах\n\n        refG2.current.style.width = `${calcProcents}%`;\n    };\n\n    // расчитываем нужное положение иконки на шкале, исходя из данных\n    // о восходе и заходе\n    const calc_sun_pos = () => {\n        const sunrise = sun_hours.sunrise.timestamp;\n        const sunset = sun_hours.sunset.timestamp;\n        return addon_map(fixed_timestamp, sunrise, sunset, 0, 100);\n    };\n\n    const is_night = fixed_timestamp < sun_hours.sunrise.timestamp || fixed_timestamp > sun_hours.sunset.timestamp ? true : false;\n    const fixed_time_data = get_text_date(fixed_timestamp);\n\n    // обновление расчетеов после каждого рендера\n    useEffect(() => {\n        if (is_night) return;\n        set_sun_offset(calc_sun_pos());\n    });\n\n    //Абдейт при ресайзе\n    useEffect(() => {\n        const onResize = first_caller_delay_callback(\n            (e: Event) => {\n                handleupdate();\n            },\n            () => {},\n            100\n        );\n\n        window.addEventListener(\"resize\", onResize);\n\n        return () => {\n            window.removeEventListener(\"resize\", onResize);\n        };\n    }, []);\n\n    return (\n        <div className={componentClassName}>\n            <div className=\"WeatherSunPhase__sun_rise_wrapper\">\n                {!is_night ? (\n                    <>\n                        <HoverHint hoverText=\"Восход\" key={1}>\n                            <>\n                                <IconSunrise sunrise={true} addClassName={[\"WeatherSunPhase__sun_rise_wrapper__icon\"]} />\n                                <span className=\"WeatherSunPhase__time\">\n                                    {sun_hours.sunrise.hours}:{sun_hours.sunrise.minutes}\n                                </span>\n                            </>\n                        </HoverHint>\n                    </>\n                ) : (\n                    <>\n                        <IconWeatherClearNight addClassName={[\"WeatherSunPhase__sun_rise_wrapper__icon\"]} key={2} />\n                        <span className=\"WeatherSunPhase__time\" key={3}>\n                            {fixed_time_data.hoursUTC}:{fixed_time_data.minutesUTC}\n                        </span>\n                    </>\n                )}\n            </div>\n            <div className=\"WeatherSunPhase__vieport\" ref={refVieport}>\n                {!is_night ? (\n                    <>\n                        <hr className=\"WeatherSunPhase__g2\" ref={refG2} key={1} />\n                        <div className=\"WeatherSunPhase__sun_wrapper\" ref={refSunWrapper} key={2}>\n                            <IconWeatherClearDay />\n                        </div>\n                        <hr className=\"WeatherSunPhase__g1\" key={3} />\n                    </>\n                ) : (\n                    <>\n                        <hr className=\"WeatherSunPhase__g1\" key={3} />\n                    </>\n                )}\n            </div>\n            <div className=\"WeatherSunPhase__sun_set_wrapper\">\n                {!is_night ? (\n                    <>\n                        <HoverHint hoverText=\"Заход\" key={1}>\n                            <IconSunrise sunrise={false} addClassName={[\"WeatherSunPhase__sun_set_wrapper__icon\"]} />\n                        </HoverHint>\n                        <span className=\"WeatherSunPhase__time\" key={2}>\n                            {sun_hours.sunset.hours}:{sun_hours.sunset.minutes}\n                        </span>\n                    </>\n                ) : (\n                    <>\n                        <HoverHint hoverText=\"Восход\" key={3}>\n                            <IconSunrise sunrise={true} addClassName={[\"WeatherSunPhase__sun_rise_wrapper__icon\"]} />\n                        </HoverHint>\n                        <span className=\"WeatherSunPhase__time\" key={2}>\n                            {sun_hours.sunrise.hours}:{sun_hours.sunrise.minutes}\n                        </span>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport { WeatherSunPhase };\n","import React, { useEffect, useState } from \"react\";\nimport \"./CityCurrentWeather.scss\";\nimport { useCurrentWeather } from \"../../hooks/useCurrentWeather\";\nimport { IconDirection } from \"../../ui/IconDirection\";\nimport { calc_backgraund_type, calc_sun_hours_details, convert_hpa_to_mmRtSt, deg_to_compass } from \"../../utils/util_functions\";\nimport { IconLoader } from \"../../ui/IconLoader\";\nimport { WeatherNowTime } from \"../WeatherNowTime/WeatherNowTime\";\nimport { WeatherBaseInfo } from \"../WeatherBaseInfo/WeatherBaseInfo\";\nimport { WeatherAltInfoTemplate } from \"../WeatherAltInfoTemplate/WeatherAltInfoTemplate\";\nimport \"./../../fonts/acline/acline.css\";\nimport { HoverHint } from \"../../HOC/HoverHint/HoverHint\";\nimport { WeatherSunPhase } from \"../WeatherSunPhase/WeatherSunPhase\";\nimport { useAppStoreSelector, useAppStoreDispatch } from \"../../redux/redux_hooks\";\nimport { updateBackgroundClass } from \"../../redux/slises/homePage\";\n\ninterface ICityCurrentWeatherProps {}\n\ntype TProps = Readonly<ICityCurrentWeatherProps>;\n\nfunction CityCurrentWeather({}: TProps = {}) {\n    const { lat, lon, cityName } = useAppStoreSelector((state) => state.weatherGeo);\n    const reduxStoreDispatch = useAppStoreDispatch();\n    const [isLoadingVisible, setIsLoadingVisible] = useState<boolean>(false);\n    const [isFetchError, setIsFetchError] = useState<boolean>(false); // ошибка загрузки данных\n\n    const onErrorCurrentWeather = () => {\n        setIsLoadingVisible(false);\n        setIsFetchError(true);\n    };\n\n    const onStartCurrentWeather = () => {\n        setIsLoadingVisible(true);\n        setIsFetchError(false);\n    };\n\n    const onEndCurrentWeather = () => {\n        setIsLoadingVisible(false);\n    };\n\n    let [currentWeather, getWeather, forceGetWeather] = useCurrentWeather({\n        cityName,\n        lat,\n        lon,\n        errorCallback: onErrorCurrentWeather,\n        fetchStartCallback: onStartCurrentWeather,\n        fetchEndCallback: onEndCurrentWeather,\n    });\n\n    const reload_comonent = () => {\n        setIsFetchError(false);\n        forceGetWeather();\n    };\n\n    const is_pressure = currentWeather && (currentWeather.main.pressure || currentWeather.main.grnd_level) ? true : false;\n\n    useEffect(() => {\n        if (currentWeather) {\n            console.log(currentWeather);\n            let sun_data = calc_sun_hours_details(currentWeather.sys.sunrise, currentWeather.sys.sunset, currentWeather.timezone);\n            reduxStoreDispatch(updateBackgroundClass(`Home--bg_${calc_backgraund_type(sun_data, currentWeather)}`));\n        }\n    }, [currentWeather]);\n\n    useEffect(() => {\n        getWeather();\n    });\n\n    return (\n        <div className=\"CityCurrentWeather\">\n            {currentWeather && !isLoadingVisible && !isFetchError ? (\n                <>\n                    <div className=\"CityCurrentWeather__head\">\n                        <h2 className=\"CityCurrentWeather__name\">{cityName}</h2>\n                        <WeatherNowTime\n                            times={{ dt: currentWeather.dt, timezone: currentWeather.timezone }}\n                            get_hours={false}\n                            get_minutes={false}\n                            addClassName={[\"CityCurrentWeather__data_details\"]}\n                        />\n                    </div>\n\n                    <div className=\"CityCurrentWeather__main_wrapper\">\n                        <div className=\"CityCurrentWeather__main\">\n                            <WeatherBaseInfo\n                                weather_data={{\n                                    sunrise: currentWeather.sys.sunrise,\n                                    sunset: currentWeather.sys.sunset,\n                                    timezone: currentWeather.timezone,\n                                    dt: currentWeather.dt,\n                                    weather_id: currentWeather.weather[0].id,\n                                    description: currentWeather.weather[0].description,\n                                    temp: currentWeather.main.temp,\n                                    feels_like: currentWeather.main.feels_like,\n                                }}\n                            />\n\n                            <div className=\"CityCurrentWeather__alt_info_wrapper\">\n                                {currentWeather.snow ? (\n                                    <WeatherAltInfoTemplate\n                                        addClassName={[\"CityCurrentWeather__alt_info\"]}\n                                        slot_header={\"Снег\"}\n                                        slot_main={currentWeather.snow[\"1h\"]}\n                                        slot_dop={\"мм/ч\"}\n                                    />\n                                ) : null}\n\n                                {currentWeather.rain ? (\n                                    <WeatherAltInfoTemplate\n                                        addClassName={[\"CityCurrentWeather__alt_info\"]}\n                                        slot_header={\"Дождь\"}\n                                        slot_main={currentWeather.rain[\"1h\"]}\n                                        slot_dop={\"мм/ч\"}\n                                    />\n                                ) : null}\n\n                                <WeatherAltInfoTemplate\n                                    addClassName={[\"CityCurrentWeather__alt_info\"]}\n                                    slot_header={\"Влажность\"}\n                                    slot_main={`${Math.round(currentWeather.main.humidity)}`}\n                                    slot_dop={\"%\"}\n                                />\n\n                                {currentWeather.clouds && currentWeather.clouds.all ? (\n                                    <WeatherAltInfoTemplate\n                                        addClassName={[\"CityCurrentWeather__alt_info\"]}\n                                        slot_header={\"Облачность\"}\n                                        slot_main={currentWeather.clouds.all}\n                                        slot_dop={\"%\"}\n                                    />\n                                ) : null}\n\n                                {is_pressure ? (\n                                    <WeatherAltInfoTemplate\n                                        addClassName={[\"CityCurrentWeather__alt_info\"]}\n                                        slot_header={\"Давление\"}\n                                        slot_main={convert_hpa_to_mmRtSt({\n                                            pressure: currentWeather.main.pressure,\n                                            grnd_level: currentWeather.main.grnd_level,\n                                        })}\n                                        slot_dop={\"мм.рт.ст.\"}\n                                    />\n                                ) : null}\n\n                                {currentWeather.wind ? (\n                                    <WeatherAltInfoTemplate\n                                        addClassName={[\"CityCurrentWeather__alt_wind\", \"CityCurrentWeather__alt_info\"]}\n                                        slot_header={\"Ветер\"}\n                                        slot_main={\n                                            <HoverHint hoverText={deg_to_compass(currentWeather.wind.deg)}>\n                                                <IconDirection direction={currentWeather.wind.deg} />\n                                            </HoverHint>\n                                        }\n                                        slot_dop={`${currentWeather.wind.speed} м/сек`}\n                                    />\n                                ) : null}\n\n                                <WeatherAltInfoTemplate\n                                    addClassName={[\"CityCurrentWeather__alt_info\"]}\n                                    slot_header={\"Видимость\"}\n                                    slot_main={`${(currentWeather.visibility / 1000).toPrecision(2)}`}\n                                    slot_dop={\"Км\"}\n                                />\n                            </div>\n\n                            <WeatherSunPhase\n                                addClassName={[\"CityCurrentWeather__sun_phase\"]}\n                                sun_hours={calc_sun_hours_details(\n                                    currentWeather.sys.sunrise,\n                                    currentWeather.sys.sunset,\n                                    currentWeather.timezone\n                                )}\n                                cityTime={currentWeather.dt}\n                                cityTimezone={currentWeather.timezone}\n                            />\n                        </div>\n                    </div>\n                </>\n            ) : null}\n\n            {isFetchError ? (\n                <div className=\"CityCurrentWeather__fetch_error\">\n                    <p>Ошибка при загрузке данных о текущей погоде.</p>\n                    <button onClick={reload_comonent}>Перезагрузить</button>\n                </div>\n            ) : null}\n            {isLoadingVisible ? (\n                <div className=\"CityCurrentWeather__loader_wrapper\">\n                    <IconLoader addClassName={[\"CityCurrentWeather__loader\"]} />\n                </div>\n            ) : null}\n        </div>\n    );\n}\n\nexport { CityCurrentWeather };\nexport type { ICityCurrentWeatherProps };\n","// запрос погоды на 5 дней с 3х часовым интервалом (по внешнему API)\n// https://openweathermap.org/forecast5#5days\n\nimport { WEATHER_API_KEY, WEATHER_API_ADRESS_5D3H } from \"./global_vars\";\nimport { get_system_language } from \"./util_functions\";\nimport type * as FetchLatLonTypes from \"./fetch_LatLon\";\nimport type { TresponseObjWeather } from \"./fetch_current_weather\";\n\ninterface IFetch5d3hWeatherArgs {\n    lat: number;\n    lon: number;\n    callBack?: (response: TResponse) => void;\n    errorCallback?: () => void;\n    getController?: (obj: AbortController) => void;\n}\n\ntype TresponseObjListObj = {\n    dt: number;\n    main: {\n        temp: number;\n        feels_like: number;\n        temp_min: number;\n        temp_max: number;\n        pressure?: number;\n        sea_level?: number;\n        grnd_level?: number;\n        humidity: number;\n        temp_kf: number;\n    };\n    weather: TresponseObjWeather;\n    clouds?: {\n        all: number;\n    };\n    wind?: {\n        speed: number;\n        deg: number;\n        gust: number;\n    };\n    visibility: number;\n    pop: number;\n    rain?: {\n        [\"3h\"]: number;\n    };\n    snow?: {\n        [\"3h\"]: number;\n    };\n    sys: {\n        pod: \"d\" | \"n\";\n    };\n    dt_txt?: string;\n};\n\ntype TresponseObj = {\n    cod: string;\n    message: number;\n    cnt: number;\n    list: TresponseObjListObj[];\n\n    city: {\n        id: number;\n        name: string;\n        coord: {\n            lat: number;\n            lon: number;\n        };\n        country: FetchLatLonTypes.TResponseObj[\"country\"];\n        population: number;\n        timezone: number;\n        sunrise: number;\n        sunset: number;\n    };\n};\n\ntype TResponse = TresponseObj | undefined;\n\nfunction generate_url(lat: number, lon: number): URL {\n    let temp_url = new URL(WEATHER_API_ADRESS_5D3H);\n    temp_url.searchParams.set(\"lat\", lat.toString());\n    temp_url.searchParams.set(\"lon\", lon.toString());\n    temp_url.searchParams.set(\"units\", \"metric\");\n    temp_url.searchParams.set(\"lang\", get_system_language());\n    temp_url.searchParams.set(\"appid\", WEATHER_API_KEY);\n    return temp_url;\n}\n\n/*\n    описание такоеже как и в fetch_current_weather.tsx\n*/\n\nasync function fetch_5d3h_weather({\n    lat,\n    lon,\n    callBack = () => {},\n    errorCallback = () => {},\n    getController = () => {},\n}: Readonly<IFetch5d3hWeatherArgs>) {\n    let full_url = generate_url(lat, lon);\n\n    let response: TResponse;\n\n    try {\n        // TODO закоментировал это чтобы не делать лишних запросов при разработке\n        let controller = new AbortController();\n        getController(controller);\n        let get_response = await fetch(full_url, { signal: controller.signal });\n        let raw_response = await get_response.json();\n\n        if (raw_response.cod && raw_response.cod !== \"200\") {\n            throw new Error(JSON.stringify(raw_response));\n        }\n\n        response = raw_response;\n        // response = JSON.parse(\n        //     '{\"cod\":\"200\",\"message\":0,\"cnt\":40,\"list\":[{\"dt\":1681722000,\"main\":{\"temp\":0.48,\"feels_like\":0.48,\"temp_min\":0.48,\"temp_max\":0.48,\"pressure\":1000,\"sea_level\":1000,\"grnd_level\":975,\"humidity\":55,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":0.38,\"deg\":83,\"gust\":0.93},\"visibility\":10000,\"pop\":0.01,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-17 09:00:00\"},{\"dt\":1681732800,\"main\":{\"temp\":-0.01,\"feels_like\":-2.94,\"temp_min\":-1,\"temp_max\":-0.01,\"pressure\":1000,\"sea_level\":1000,\"grnd_level\":975,\"humidity\":61,\"temp_kf\":0.99},\"weather\":[{\"id\":600,\"main\":\"Snow\",\"description\":\"небольшой снег\",\"icon\":\"13d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":2.41,\"deg\":238,\"gust\":5.03},\"visibility\":10000,\"pop\":0.23,\"snow\":{\"3h\":0.11},\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-17 12:00:00\"},{\"dt\":1681743600,\"main\":{\"temp\":-6.79,\"feels_like\":-13.79,\"temp_min\":-10.43,\"temp_max\":-6.79,\"pressure\":1004,\"sea_level\":1004,\"grnd_level\":980,\"humidity\":77,\"temp_kf\":3.64},\"weather\":[{\"id\":600,\"main\":\"Snow\",\"description\":\"небольшой снег\",\"icon\":\"13n\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":7.13,\"deg\":301,\"gust\":13.75},\"visibility\":5374,\"pop\":0.64,\"snow\":{\"3h\":0.35},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-17 15:00:00\"},{\"dt\":1681754400,\"main\":{\"temp\":-12.06,\"feels_like\":-19.06,\"temp_min\":-12.06,\"temp_max\":-12.06,\"pressure\":1012,\"sea_level\":1012,\"grnd_level\":985,\"humidity\":81,\"temp_kf\":0},\"weather\":[{\"id\":600,\"main\":\"Snow\",\"description\":\"небольшой снег\",\"icon\":\"13n\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":5.89,\"deg\":281,\"gust\":12.13},\"visibility\":10000,\"pop\":0.38,\"snow\":{\"3h\":0.11},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-17 18:00:00\"},{\"dt\":1681765200,\"main\":{\"temp\":-14.13,\"feels_like\":-21.13,\"temp_min\":-14.13,\"temp_max\":-14.13,\"pressure\":1015,\"sea_level\":1015,\"grnd_level\":988,\"humidity\":73,\"temp_kf\":0},\"weather\":[{\"id\":803,\"main\":\"Clouds\",\"description\":\"облачно с прояснениями\",\"icon\":\"04n\"}],\"clouds\":{\"all\":57},\"wind\":{\"speed\":4.85,\"deg\":256,\"gust\":11.57},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-17 21:00:00\"},{\"dt\":1681776000,\"main\":{\"temp\":-12.99,\"feels_like\":-19.99,\"temp_min\":-12.99,\"temp_max\":-12.99,\"pressure\":1016,\"sea_level\":1016,\"grnd_level\":989,\"humidity\":78,\"temp_kf\":0},\"weather\":[{\"id\":803,\"main\":\"Clouds\",\"description\":\"облачно с прояснениями\",\"icon\":\"04d\"}],\"clouds\":{\"all\":78},\"wind\":{\"speed\":5.69,\"deg\":246,\"gust\":14.49},\"visibility\":7539,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-18 00:00:00\"},{\"dt\":1681786800,\"main\":{\"temp\":-10.51,\"feels_like\":-17.51,\"temp_min\":-10.51,\"temp_max\":-10.51,\"pressure\":1017,\"sea_level\":1017,\"grnd_level\":990,\"humidity\":64,\"temp_kf\":0},\"weather\":[{\"id\":600,\"main\":\"Snow\",\"description\":\"небольшой снег\",\"icon\":\"13d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":6.61,\"deg\":258,\"gust\":15.64},\"visibility\":10000,\"pop\":0.54,\"snow\":{\"3h\":0.35},\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-18 03:00:00\"},{\"dt\":1681797600,\"main\":{\"temp\":-8.46,\"feels_like\":-15.46,\"temp_min\":-8.46,\"temp_max\":-8.46,\"pressure\":1018,\"sea_level\":1018,\"grnd_level\":992,\"humidity\":54,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":7.77,\"deg\":258,\"gust\":12.37},\"visibility\":10000,\"pop\":0.42,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-18 06:00:00\"},{\"dt\":1681808400,\"main\":{\"temp\":-6.4,\"feels_like\":-13.4,\"temp_min\":-6.4,\"temp_max\":-6.4,\"pressure\":1020,\"sea_level\":1020,\"grnd_level\":993,\"humidity\":56,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":7.45,\"deg\":257,\"gust\":12.78},\"visibility\":10000,\"pop\":0.06,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-18 09:00:00\"},{\"dt\":1681819200,\"main\":{\"temp\":-6.84,\"feels_like\":-13.84,\"temp_min\":-6.84,\"temp_max\":-6.84,\"pressure\":1022,\"sea_level\":1022,\"grnd_level\":995,\"humidity\":59,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04d\"}],\"clouds\":{\"all\":98},\"wind\":{\"speed\":7.04,\"deg\":260,\"gust\":13.97},\"visibility\":10000,\"pop\":0.06,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-18 12:00:00\"},{\"dt\":1681830000,\"main\":{\"temp\":-7.96,\"feels_like\":-14.96,\"temp_min\":-7.96,\"temp_max\":-7.96,\"pressure\":1024,\"sea_level\":1024,\"grnd_level\":997,\"humidity\":64,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04n\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":6.37,\"deg\":261,\"gust\":13.35},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-18 15:00:00\"},{\"dt\":1681840800,\"main\":{\"temp\":-8.61,\"feels_like\":-15.61,\"temp_min\":-8.61,\"temp_max\":-8.61,\"pressure\":1026,\"sea_level\":1026,\"grnd_level\":999,\"humidity\":72,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04n\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":5.3,\"deg\":262,\"gust\":12.27},\"visibility\":10000,\"pop\":0.01,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-18 18:00:00\"},{\"dt\":1681851600,\"main\":{\"temp\":-9.79,\"feels_like\":-16.29,\"temp_min\":-9.79,\"temp_max\":-9.79,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1000,\"humidity\":82,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04n\"}],\"clouds\":{\"all\":96},\"wind\":{\"speed\":3.98,\"deg\":249,\"gust\":9.9},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-18 21:00:00\"},{\"dt\":1681862400,\"main\":{\"temp\":-10.37,\"feels_like\":-15.25,\"temp_min\":-10.37,\"temp_max\":-10.37,\"pressure\":1028,\"sea_level\":1028,\"grnd_level\":1001,\"humidity\":87,\"temp_kf\":0},\"weather\":[{\"id\":803,\"main\":\"Clouds\",\"description\":\"облачно с прояснениями\",\"icon\":\"04d\"}],\"clouds\":{\"all\":69},\"wind\":{\"speed\":2.46,\"deg\":238,\"gust\":7.79},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-19 00:00:00\"},{\"dt\":1681873200,\"main\":{\"temp\":-5.28,\"feels_like\":-10.02,\"temp_min\":-5.28,\"temp_max\":-5.28,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1000,\"humidity\":60,\"temp_kf\":0},\"weather\":[{\"id\":801,\"main\":\"Clouds\",\"description\":\"небольшая облачность\",\"icon\":\"02d\"}],\"clouds\":{\"all\":23},\"wind\":{\"speed\":3.17,\"deg\":243,\"gust\":4.84},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-19 03:00:00\"},{\"dt\":1681884000,\"main\":{\"temp\":-1.81,\"feels_like\":-5.63,\"temp_min\":-1.81,\"temp_max\":-1.81,\"pressure\":1025,\"sea_level\":1025,\"grnd_level\":999,\"humidity\":47,\"temp_kf\":0},\"weather\":[{\"id\":801,\"main\":\"Clouds\",\"description\":\"небольшая облачность\",\"icon\":\"02d\"}],\"clouds\":{\"all\":20},\"wind\":{\"speed\":2.95,\"deg\":248,\"gust\":3.96},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-19 06:00:00\"},{\"dt\":1681894800,\"main\":{\"temp\":-0.63,\"feels_like\":-4.47,\"temp_min\":-0.63,\"temp_max\":-0.63,\"pressure\":1024,\"sea_level\":1024,\"grnd_level\":998,\"humidity\":47,\"temp_kf\":0},\"weather\":[{\"id\":801,\"main\":\"Clouds\",\"description\":\"небольшая облачность\",\"icon\":\"02d\"}],\"clouds\":{\"all\":15},\"wind\":{\"speed\":3.24,\"deg\":266,\"gust\":4.21},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-19 09:00:00\"},{\"dt\":1681905600,\"main\":{\"temp\":-1.8,\"feels_like\":-5.67,\"temp_min\":-1.8,\"temp_max\":-1.8,\"pressure\":1024,\"sea_level\":1024,\"grnd_level\":998,\"humidity\":64,\"temp_kf\":0},\"weather\":[{\"id\":802,\"main\":\"Clouds\",\"description\":\"переменная облачность\",\"icon\":\"03d\"}],\"clouds\":{\"all\":34},\"wind\":{\"speed\":3.01,\"deg\":299,\"gust\":5.04},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-19 12:00:00\"},{\"dt\":1681916400,\"main\":{\"temp\":-5.18,\"feels_like\":-7.74,\"temp_min\":-5.18,\"temp_max\":-5.18,\"pressure\":1025,\"sea_level\":1025,\"grnd_level\":998,\"humidity\":89,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04n\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":1.54,\"deg\":282,\"gust\":4.77},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-19 15:00:00\"},{\"dt\":1681927200,\"main\":{\"temp\":-5.63,\"feels_like\":-9.13,\"temp_min\":-5.63,\"temp_max\":-5.63,\"pressure\":1025,\"sea_level\":1025,\"grnd_level\":998,\"humidity\":87,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04n\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":2.08,\"deg\":288,\"gust\":6.3},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-19 18:00:00\"},{\"dt\":1681938000,\"main\":{\"temp\":-5.82,\"feels_like\":-9.42,\"temp_min\":-5.82,\"temp_max\":-5.82,\"pressure\":1026,\"sea_level\":1026,\"grnd_level\":999,\"humidity\":93,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04n\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":2.13,\"deg\":254,\"gust\":6.63},\"visibility\":3600,\"pop\":0,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-19 21:00:00\"},{\"dt\":1681948800,\"main\":{\"temp\":-5.38,\"feels_like\":-10.09,\"temp_min\":-5.38,\"temp_max\":-5.38,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1000,\"humidity\":91,\"temp_kf\":0},\"weather\":[{\"id\":600,\"main\":\"Snow\",\"description\":\"небольшой снег\",\"icon\":\"13d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":3.12,\"deg\":272,\"gust\":7.8},\"visibility\":2071,\"pop\":0.2,\"snow\":{\"3h\":0.15},\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-20 00:00:00\"},{\"dt\":1681959600,\"main\":{\"temp\":-3.37,\"feels_like\":-8.5,\"temp_min\":-3.37,\"temp_max\":-3.37,\"pressure\":1028,\"sea_level\":1028,\"grnd_level\":1001,\"humidity\":71,\"temp_kf\":0},\"weather\":[{\"id\":600,\"main\":\"Snow\",\"description\":\"небольшой снег\",\"icon\":\"13d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":4.1,\"deg\":276,\"gust\":6.41},\"visibility\":10000,\"pop\":0.27,\"snow\":{\"3h\":0.11},\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-20 03:00:00\"},{\"dt\":1681970400,\"main\":{\"temp\":-1.2,\"feels_like\":-5.77,\"temp_min\":-1.2,\"temp_max\":-1.2,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1001,\"humidity\":73,\"temp_kf\":0},\"weather\":[{\"id\":600,\"main\":\"Snow\",\"description\":\"небольшой снег\",\"icon\":\"13d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":4.02,\"deg\":264,\"gust\":6.17},\"visibility\":3716,\"pop\":0.46,\"snow\":{\"3h\":0.32},\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-20 06:00:00\"},{\"dt\":1681981200,\"main\":{\"temp\":-0.41,\"feels_like\":-5.06,\"temp_min\":-0.41,\"temp_max\":-0.41,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1001,\"humidity\":70,\"temp_kf\":0},\"weather\":[{\"id\":600,\"main\":\"Snow\",\"description\":\"небольшой снег\",\"icon\":\"13d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":4.4,\"deg\":265,\"gust\":6.93},\"visibility\":4596,\"pop\":1,\"snow\":{\"3h\":0.38},\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-20 09:00:00\"},{\"dt\":1681992000,\"main\":{\"temp\":-0.25,\"feels_like\":-3.77,\"temp_min\":-0.25,\"temp_max\":-0.25,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1001,\"humidity\":65,\"temp_kf\":0},\"weather\":[{\"id\":600,\"main\":\"Snow\",\"description\":\"небольшой снег\",\"icon\":\"13d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":2.97,\"deg\":248,\"gust\":6.25},\"visibility\":10000,\"pop\":0.48,\"snow\":{\"3h\":0.13},\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-20 12:00:00\"},{\"dt\":1682002800,\"main\":{\"temp\":-2.2,\"feels_like\":-5.93,\"temp_min\":-2.2,\"temp_max\":-2.2,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1001,\"humidity\":80,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04n\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":2.78,\"deg\":215,\"gust\":7.88},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-20 15:00:00\"},{\"dt\":1682013600,\"main\":{\"temp\":-2.34,\"feels_like\":-6.67,\"temp_min\":-2.34,\"temp_max\":-2.34,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1001,\"humidity\":91,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04n\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":3.39,\"deg\":224,\"gust\":9.05},\"visibility\":5405,\"pop\":0.05,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-20 18:00:00\"},{\"dt\":1682024400,\"main\":{\"temp\":-2.71,\"feels_like\":-7.25,\"temp_min\":-2.71,\"temp_max\":-2.71,\"pressure\":1026,\"sea_level\":1026,\"grnd_level\":1000,\"humidity\":87,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04n\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":3.55,\"deg\":208,\"gust\":9.44},\"visibility\":10000,\"pop\":0.34,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-20 21:00:00\"},{\"dt\":1682035200,\"main\":{\"temp\":-2.19,\"feels_like\":-6.97,\"temp_min\":-2.19,\"temp_max\":-2.19,\"pressure\":1026,\"sea_level\":1026,\"grnd_level\":1000,\"humidity\":81,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":4,\"deg\":213,\"gust\":9.92},\"visibility\":10000,\"pop\":0.22,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-21 00:00:00\"},{\"dt\":1682046000,\"main\":{\"temp\":0.71,\"feels_like\":-3.81,\"temp_min\":0.71,\"temp_max\":0.71,\"pressure\":1026,\"sea_level\":1026,\"grnd_level\":1000,\"humidity\":67,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":4.62,\"deg\":223,\"gust\":7.63},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-21 03:00:00\"},{\"dt\":1682056800,\"main\":{\"temp\":3.85,\"feels_like\":-0.13,\"temp_min\":3.85,\"temp_max\":3.85,\"pressure\":1025,\"sea_level\":1025,\"grnd_level\":1000,\"humidity\":55,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":5.05,\"deg\":229,\"gust\":7.24},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-21 06:00:00\"},{\"dt\":1682067600,\"main\":{\"temp\":4.73,\"feels_like\":1.17,\"temp_min\":4.73,\"temp_max\":4.73,\"pressure\":1025,\"sea_level\":1025,\"grnd_level\":1000,\"humidity\":53,\"temp_kf\":0},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"пасмурно\",\"icon\":\"04d\"}],\"clouds\":{\"all\":100},\"wind\":{\"speed\":4.66,\"deg\":241,\"gust\":6.93},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-21 09:00:00\"},{\"dt\":1682078400,\"main\":{\"temp\":3.93,\"feels_like\":0.99,\"temp_min\":3.93,\"temp_max\":3.93,\"pressure\":1026,\"sea_level\":1026,\"grnd_level\":1000,\"humidity\":62,\"temp_kf\":0},\"weather\":[{\"id\":803,\"main\":\"Clouds\",\"description\":\"облачно с прояснениями\",\"icon\":\"04d\"}],\"clouds\":{\"all\":81},\"wind\":{\"speed\":3.32,\"deg\":230,\"gust\":7.6},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-21 12:00:00\"},{\"dt\":1682089200,\"main\":{\"temp\":-0.11,\"feels_like\":-3.71,\"temp_min\":-0.11,\"temp_max\":-0.11,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1001,\"humidity\":79,\"temp_kf\":0},\"weather\":[{\"id\":803,\"main\":\"Clouds\",\"description\":\"облачно с прояснениями\",\"icon\":\"04n\"}],\"clouds\":{\"all\":84},\"wind\":{\"speed\":3.09,\"deg\":208,\"gust\":10.08},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-21 15:00:00\"},{\"dt\":1682100000,\"main\":{\"temp\":-1.18,\"feels_like\":-5.19,\"temp_min\":-1.18,\"temp_max\":-1.18,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1001,\"humidity\":82,\"temp_kf\":0},\"weather\":[{\"id\":803,\"main\":\"Clouds\",\"description\":\"облачно с прояснениями\",\"icon\":\"04n\"}],\"clouds\":{\"all\":59},\"wind\":{\"speed\":3.31,\"deg\":207,\"gust\":10.29},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-21 18:00:00\"},{\"dt\":1682110800,\"main\":{\"temp\":-2.06,\"feels_like\":-5.98,\"temp_min\":-2.06,\"temp_max\":-2.06,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1001,\"humidity\":90,\"temp_kf\":0},\"weather\":[{\"id\":801,\"main\":\"Clouds\",\"description\":\"небольшая облачность\",\"icon\":\"02n\"}],\"clouds\":{\"all\":23},\"wind\":{\"speed\":3.01,\"deg\":193,\"gust\":8.27},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2023-04-21 21:00:00\"},{\"dt\":1682121600,\"main\":{\"temp\":-1.84,\"feels_like\":-5.89,\"temp_min\":-1.84,\"temp_max\":-1.84,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1001,\"humidity\":89,\"temp_kf\":0},\"weather\":[{\"id\":802,\"main\":\"Clouds\",\"description\":\"переменная облачность\",\"icon\":\"03d\"}],\"clouds\":{\"all\":37},\"wind\":{\"speed\":3.2,\"deg\":189,\"gust\":8.14},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-22 00:00:00\"},{\"dt\":1682132400,\"main\":{\"temp\":3.35,\"feels_like\":0.16,\"temp_min\":3.35,\"temp_max\":3.35,\"pressure\":1027,\"sea_level\":1027,\"grnd_level\":1001,\"humidity\":62,\"temp_kf\":0},\"weather\":[{\"id\":802,\"main\":\"Clouds\",\"description\":\"переменная облачность\",\"icon\":\"03d\"}],\"clouds\":{\"all\":45},\"wind\":{\"speed\":3.49,\"deg\":207,\"gust\":5.48},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-22 03:00:00\"},{\"dt\":1682143200,\"main\":{\"temp\":6.29,\"feels_like\":3.79,\"temp_min\":6.29,\"temp_max\":6.29,\"pressure\":1026,\"sea_level\":1026,\"grnd_level\":1000,\"humidity\":47,\"temp_kf\":0},\"weather\":[{\"id\":802,\"main\":\"Clouds\",\"description\":\"переменная облачность\",\"icon\":\"03d\"}],\"clouds\":{\"all\":48},\"wind\":{\"speed\":3.4,\"deg\":215,\"gust\":4.51},\"visibility\":10000,\"pop\":0,\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2023-04-22 06:00:00\"}],\"city\":{\"id\":1511494,\"name\":\"Анжеро-Судженск\",\"coord\":{\"lat\":56.0778,\"lon\":86.0194},\"country\":\"RU\",\"population\":82526,\"timezone\":25200,\"sunrise\":1681686390,\"sunset\":1681737860}}'\n        // );\n    } catch (err) {\n        if (err instanceof Error && err.message.includes(\"The user aborted a request.\")) {\n            return;\n        }\n\n        console.group(\"ERROR INFO\");\n        console.error(`Ошибка запроса по адресу ${full_url}`);\n        console.error(err);\n        console.groupEnd();\n        errorCallback();\n    }\n\n    callBack(response);\n}\n\nexport { fetch_5d3h_weather };\nexport type { IFetch5d3hWeatherArgs, TResponse, TresponseObj, TresponseObjListObj };\n","import React, { useState, useRef } from \"react\";\nimport { fetch_5d3h_weather } from \"../utils/fetch_5d3h_weather\";\nimport type * as Types5d3hWeather from \"../utils/fetch_5d3h_weather\";\n\ntype TrefMemoPos = {\n    prewLat: Tuse5d3hWeatherArgs[\"lat\"];\n    prewLon: Tuse5d3hWeatherArgs[\"lon\"];\n};\n\ntype Tuse5d3hWeatherArgs = {\n    cityName?: string;\n    lat?: number;\n    lon?: number;\n    errorCallback?: () => void;\n    fetchStartCallback?: () => void;\n    fetchEndCallback?: () => void;\n};\n\nconst MAX_RADIUS = 0.05;\n\nfunction use5d3hWeather({\n    lat,\n    lon,\n    cityName,\n    errorCallback = () => {},\n    fetchEndCallback = () => {},\n    fetchStartCallback = () => {},\n}: Tuse5d3hWeatherArgs): [respWeather: Types5d3hWeather.TResponse, startFetch: () => void, forceFetch: () => void] {\n    let [weather, setWeather] = useState<Types5d3hWeather.TResponse>();\n    let memoPos = useRef<TrefMemoPos>({ prewLat: -999.999, prewLon: -999.999 }); // первоначально инициаизируем несуществующими координатами\n    let isFetching = useRef<boolean>(false); // состояние Fetch, идетли сейчас запрос ?\n    let abortController = useRef<null | AbortController>(null);\n\n    const fetchingResponseCallback = (resp: Types5d3hWeather.TResponse) => {\n        isFetching.current = false;\n        abortController.current = null;\n        setWeather(resp);\n        fetchEndCallback();\n    };\n\n    const fetchingErrorCallback = () => {\n        isFetching.current = false;\n        abortController.current = null;\n        errorCallback();\n    };\n\n    const fetchingStartCallback = () => {\n        if (isFetching.current && abortController.current != null) {\n            abortController.current.abort();\n            console.log(\"old fetch aborted\");\n            abortController.current = null;\n        }\n        isFetching.current = true;\n        fetchStartCallback();\n    };\n\n    const isNewCoordsOutsRadiusOldCoords = () => {\n        if (Math.abs(weather!.city.coord.lat - lat!) > MAX_RADIUS || Math.abs(weather!.city.coord.lon - lon!) > MAX_RADIUS) {\n            return true;\n        }\n        return false;\n    };\n\n    const getAbortController = (obj: AbortController) => {\n        abortController.current = obj;\n    };\n\n    const update_memoPos = () => {\n        if (memoPos.current.prewLat !== lat) {\n            memoPos.current.prewLat = lat;\n        }\n        if (memoPos.current.prewLon !== lon) {\n            memoPos.current.prewLon = lat;\n        }\n    };\n\n    const force_fetch = () => {\n        if (lat && lon) {\n            fetchingStartCallback();\n            fetch_5d3h_weather({\n                lat,\n                lon,\n                callBack: fetchingResponseCallback,\n                errorCallback: fetchingErrorCallback,\n                getController: getAbortController,\n            });\n            return;\n        }\n    };\n\n    const startFetch = () => {\n        if (lat && lon) {\n            if (memoPos.current.prewLat === lat || memoPos.current.prewLon === lon) return;\n\n            update_memoPos();\n\n            if (!weather) {\n                fetchingStartCallback();\n                fetch_5d3h_weather({\n                    lat,\n                    lon,\n                    callBack: fetchingResponseCallback,\n                    errorCallback: fetchingErrorCallback,\n                    getController: getAbortController,\n                });\n            } else {\n                // если новые координаты +- теже что и координаты текущего города то ничего не делаем\n                // координаты от GEOAPI и из API запроса погоды могут немного отличватся\n                // if (Math.abs(weather.coord.lat - lat) > MAX_RADIUS || Math.abs(weather.coord.lon - lon) > MAX_RADIUS) {\n                if (isNewCoordsOutsRadiusOldCoords()) {\n                    // дополнительно проверяем что искомый город отличается от текущего\n                    if (weather.city.name !== cityName) {\n                        fetchingStartCallback();\n                        fetch_5d3h_weather({\n                            lat,\n                            lon,\n                            callBack: fetchingResponseCallback,\n                            errorCallback: fetchingErrorCallback,\n                            getController: getAbortController,\n                        });\n                    }\n                }\n            }\n        }\n    };\n\n    return [weather, startFetch, force_fetch];\n}\n\nexport { use5d3hWeather };\nexport type { Tuse5d3hWeatherArgs };\n","import React from \"react\";\nimport type { TresponseObjListObj } from \"../../utils/fetch_5d3h_weather\";\nimport { get_text_date } from \"../../utils/util_functions\";\nimport { WeatherAltInfoTemplate } from \"../WeatherAltInfoTemplate/WeatherAltInfoTemplate\";\nimport \"./City5d3hWeather.scss\";\nimport { dt_from_string, decode_dataIdRender } from \"./City5d3hWeather\";\n\ntype TCity5d3hWeather__daysListProps = {\n    sortedForecast: TresponseObjListObj[][];\n    setDataIdRender: (val: string) => void;\n    dataIdRender: string;\n};\n\ntype TProps = Readonly<TCity5d3hWeather__daysListProps>;\n\nfunction City5d3hWeather__daysList({ sortedForecast, setDataIdRender, dataIdRender }: TProps) {\n    const gen_classnames = (day: TresponseObjListObj[], date_txt: ReturnType<typeof get_text_date>) => {\n        let classes: string[] = [];\n\n        if (decode_dataIdRender(dataIdRender).date == dt_from_string(day[0].dt)) {\n            classes.push(\"City5d3hWeather__day--active\");\n        }\n\n        if (date_txt.day_name_shortUTC.toLocaleUpperCase() == \"СБ\" || date_txt.day_name_shortUTC.toLocaleUpperCase() == \"ВС\") {\n            classes.push(\"City5d3hWeather__day--weekend\");\n        }\n\n        return classes;\n    };\n\n    return (\n        <div className=\"City5d3hWeather__days_list\">\n            {sortedForecast.map((day, index) => {\n                let date_txt = get_text_date(new Date(day[0].dt * 1000));\n\n                const onClick = (e: React.MouseEvent, data_id: string) => {\n                    setDataIdRender(`${data_id}--${index}`);\n                };\n\n                return (\n                    <React.Fragment key={day[0].dt}>\n                        <WeatherAltInfoTemplate\n                            slot_header={date_txt.day_name_shortUTC}\n                            slot_main={date_txt.dayNum_monthNameUTC}\n                            onClick={onClick}\n                            data_id={dt_from_string(day[0].dt)}\n                            addClassName={gen_classnames(day, date_txt)}\n                        />\n                    </React.Fragment>\n                );\n            })}\n        </div>\n    );\n}\n\nexport { City5d3hWeather__daysList };\n","import React, { useEffect } from \"react\";\nimport { decode_dataIdRender } from \"./City5d3hWeather\";\nimport type { TresponseObjListObj } from \"../../utils/fetch_5d3h_weather\";\nimport type { TResponse } from \"../../utils/fetch_5d3h_weather\";\nimport { WeatherIcon } from \"../WeatherIcon/WeatherIcon\";\nimport { HoverHint } from \"../../HOC/HoverHint/HoverHint\";\nimport { addon_map, deg_to_compass, get_text_date, is_mobile_screen_size } from \"../../utils/util_functions\";\nimport { IconDirection } from \"../../ui/IconDirection\";\nimport \"./City5d3hWeather.scss\";\n\ntype TCity5d3hWeather_dayWeatherProps = {\n    dataIdRender: string;\n    sorted_days_weather: TresponseObjListObj[][];\n    weather: TResponse;\n};\n\ntype TProps = Readonly<TCity5d3hWeather_dayWeatherProps>;\n\nfunction City5d3hWeather_dayWeather({ dataIdRender, sorted_days_weather, weather }: TProps) {\n    let day_id = Number(decode_dataIdRender(dataIdRender).index);\n\n    // api не предоставляет время восхода и заката для будующих дней, поэтому выщитываем его самостоятельно, исходя из текущего дня\n\n    const calc_sunrise = (dt: number, timezone: number) => {\n        let base_sunrise = weather!.city.sunrise;\n        let jsDate = new Date((base_sunrise + timezone) * 1000);\n        let jsDate_h = jsDate.getUTCHours();\n        let jsDate_m = jsDate.getUTCMinutes();\n\n        let calced_sunrise = new Date(dt * 1000);\n        calced_sunrise.setUTCHours(jsDate_h);\n        calced_sunrise.setUTCMinutes(jsDate_m);\n\n        return calced_sunrise.getTime() / 1000 - timezone;\n    };\n\n    const calc_sunset = (dt: number, timezone: number) => {\n        let base_sunset = weather!.city.sunset;\n        let jsDate = new Date((base_sunset + timezone) * 1000);\n        let jsDate_h = jsDate.getUTCHours();\n        let jsDate_m = jsDate.getUTCMinutes();\n\n        let calced_sunset = new Date(dt * 1000);\n        calced_sunset.setUTCHours(jsDate_h);\n        calced_sunset.setUTCMinutes(jsDate_m);\n\n        return calced_sunset.getTime() / 1000 - timezone;\n    };\n\n    return (\n        <>\n            {/* разметка будет двух типов: под мобильник и десктоп */}\n            {!is_mobile_screen_size() ? (\n                <>{desctop_html(day_id, sorted_days_weather, weather, calc_sunrise, calc_sunset)}</>\n            ) : (\n                <>{mobile_html(day_id, sorted_days_weather, weather, calc_sunrise, calc_sunset)}</>\n            )}\n        </>\n    );\n}\n\nfunction mobile_html(\n    day_id: number,\n    sorted_days_weather: TresponseObjListObj[][],\n    weather: TResponse,\n    calc_sunrise: (val: number, val2: number) => number,\n    calc_sunset: (val: number, val2: number) => number\n) {\n    return (\n        <>\n            {sorted_days_weather[day_id].map((forecast) => {\n                return (\n                    <div key={forecast.dt} className=\"City5d3hWeather__day_time_weather\">\n                        <span className=\"City5d3hWeather__day_time_time\">\n                            {(function () {\n                                let text_date = get_text_date(forecast.dt * 1000);\n                                return `${text_date.hoursUTC}:${text_date.minutesUTC}`;\n                            })()}\n                        </span>\n\n                        <HoverHint\n                            hoverText={\n                                <>\n                                    <div className=\"City5d3hWeather__day_time_hint\">\n                                        <div>{forecast.weather[0].description}</div>\n                                        <div>{`вероятность осадков ${addon_map(forecast.pop, 0.0, 1.0, 0, 100).toFixed(0)}%`}</div>\n                                        {forecast.rain ? <div>{`${forecast.rain[\"3h\"]} мм/3ч`}</div> : null}\n                                        {forecast.snow ? <div>{`${forecast.snow[\"3h\"]} мм/3ч`}</div> : null}\n                                    </div>\n                                </>\n                            }\n                        >\n                            <WeatherIcon\n                                weather_data={{\n                                    // этот компонент изначально был расчитан на текущую погоду, поэтому там требовалось сдвигать sunrise. sunset. dt на timezone, сдесь для dt это не нужно\n                                    sunrise: calc_sunrise(forecast.dt, weather!.city.timezone), // api не предостовляет информации о восходе и заходе на будующие дни, поэтому для них будем брать время восхода такоеже как и в текущем дне, для этого секундный таймштамп увеличиваем на 1 день\n                                    sunset: calc_sunset(forecast.dt, weather!.city.timezone),\n                                    timezone: weather!.city.timezone, // timezone нужен для корректного расчета sunrise и sunset\n                                    dt: forecast.dt - weather!.city.timezone, // при расчетах WeatherIcon сдвигает это время на timezone, но в данном случае мы это невелируем, сдивигая его в противоположную сторону\n                                    weather_id: forecast.weather[0].id,\n                                }}\n                            />\n                        </HoverHint>\n\n                        {forecast.wind ? (\n                            <div className=\"City5d3hWeather__day_time_wnd\">\n                                <HoverHint\n                                    hoverText={\n                                        <>\n                                            <div className=\"City5d3hWeather__day_time_hint\">\n                                                <div>{deg_to_compass(forecast.wind.deg)}</div>\n                                                <div>{forecast.wind.speed.toFixed(1)} м/сек</div>\n                                            </div>\n                                        </>\n                                    }\n                                >\n                                    <IconDirection direction={forecast.wind.deg} />\n                                </HoverHint>\n                            </div>\n                        ) : null}\n                        <HoverHint hoverText={`Ощущается как: ${forecast.main.feels_like.toFixed(1)} °c`}>\n                            <span className=\"City5d3hWeather__day_time_temp\">{`${forecast.main.temp.toFixed(1)} °c`}</span>\n                        </HoverHint>\n                    </div>\n                );\n            })}\n        </>\n    );\n}\n\nfunction desctop_html(\n    day_id: number,\n    sorted_days_weather: TresponseObjListObj[][],\n    weather: TResponse,\n    calc_sunrise: (val: number, val2: number) => number,\n    calc_sunset: (val: number, val2: number) => number\n) {\n    return (\n        <>\n            {sorted_days_weather[day_id].map((forecast) => {\n                return (\n                    <div key={forecast.dt} className=\"City5d3hWeather__day_time_weather\">\n                        <span className=\"City5d3hWeather__day_time_time\">\n                            {(function () {\n                                let text_date = get_text_date(forecast.dt * 1000);\n                                return `${text_date.hoursUTC}:${text_date.minutesUTC}`;\n                            })()}\n                        </span>\n                        <WeatherIcon\n                            weather_data={{\n                                // этот компонент изначально был расчитан на текущую погоду, поэтому там требовалось сдвигать sunrise. sunset. dt на timezone, сдесь для dt это не нужно\n                                sunrise: calc_sunrise(forecast.dt, weather!.city.timezone), // api не предостовляет информации о восходе и заходе на будующие дни, поэтому для них будем брать время восхода такоеже как и в текущем дне, для этого секундный таймштамп увеличиваем на 1 день\n                                sunset: calc_sunset(forecast.dt, weather!.city.timezone),\n                                timezone: weather!.city.timezone, // timezone нужен для корректного расчета sunrise и sunset\n                                dt: forecast.dt - weather!.city.timezone, // при расчетах WeatherIcon сдвигает это время на timezone, но в данном случае мы это невелируем, сдивигая его в противоположную сторону\n                                weather_id: forecast.weather[0].id,\n                            }}\n                        />\n                        <HoverHint hoverText={`Вероятность осадков ${addon_map(forecast.pop, 0.0, 1.0, 0, 100).toFixed(0)}%`}>\n                            <span className=\"City5d3hWeather__day_time_desc\">{forecast.weather[0].description}</span>\n                        </HoverHint>\n                        {forecast.rain ? <span>{`${forecast.rain[\"3h\"]} мм/3ч`}</span> : null}\n                        {forecast.snow ? <span>{`${forecast.snow[\"3h\"]} мм/3ч`}</span> : null}\n                        {forecast.wind ? (\n                            <div className=\"City5d3hWeather__day_time_wnd\">\n                                <span>{forecast.wind.speed.toFixed(1)} м/сек</span>\n                                <HoverHint hoverText={deg_to_compass(forecast.wind.deg)}>\n                                    <IconDirection direction={forecast.wind.deg} />\n                                </HoverHint>\n                            </div>\n                        ) : null}\n                        <HoverHint hoverText={`Ощущается как: ${forecast.main.feels_like.toFixed(1)} °c`}>\n                            <span className=\"City5d3hWeather__day_time_temp\">{`${forecast.main.temp.toFixed(1)} °c`}</span>\n                        </HoverHint>\n                    </div>\n                );\n            })}\n        </>\n    );\n}\n\nexport { City5d3hWeather_dayWeather };\n\n// if (now_timestamp > sun_data.sunset.timestamp || now_timestamp < sun_data.sunrise.timestamp) {\n// if (1684443600000 > 1684531080000 || 1684443600000 < 1684472700000) {\n","import React, { useRef, useEffect } from \"react\";\nimport type { TooltipProps } from \"recharts\";\nimport type { ValueType, NameType } from \"recharts/types/component/DefaultTooltipContent\";\nimport { first_caller_delay_callback } from \"../../utils/decorators\";\nimport { generateHashCode } from \"../../utils/util_functions\";\nimport \"./CustomizedTooltip.scss\";\n\ninterface ICustomizedTooltipProps {}\n\ntype TProps = TooltipProps<ValueType, NameType> & ICustomizedTooltipProps;\n\nfunction CustomizedTooltip(external: TProps) {\n    let isActive = external.active!;\n    let timerId: number | null = null;\n    let refTooltip = useRef<HTMLDivElement>(null);\n    //let data = external.payload![0];\n    let data = external.payload && external.payload.length > 0 ? external.payload[0] : null;\n\n    const toolTipHide = first_caller_delay_callback(\n        () => {\n            if (!isActive) return;\n            let tooltip = document.querySelector(\".recharts-tooltip-wrapper\");\n            if (!tooltip) return;\n            tooltip.dispatchEvent(new MouseEvent(\"mouseout\", { bubbles: true }));\n        },\n        () => {},\n        200\n    );\n\n    useEffect(() => {\n        timerId = setTimeout(() => {\n            if (isActive) {\n                toolTipHide();\n                timerId = null;\n            }\n        }, 6000) as any as number;\n\n        window.addEventListener(\"resize\", toolTipHide);\n        window.addEventListener(\"scroll\", toolTipHide);\n\n        return () => {\n            window.removeEventListener(\"resize\", toolTipHide);\n            window.removeEventListener(\"scroll\", toolTipHide);\n\n            if (timerId) {\n                clearTimeout(timerId);\n                timerId = null;\n            }\n        };\n    }, [external]);\n\n    const get_jsx_from_payload = () => {\n        let jsx_arr: any[] = [];\n        let postfix: string = \"\";\n\n        if (!data || !data.payload) return <></>;\n\n        for (let elem in data.payload) {\n            postfix = \"\";\n            if (elem == \"name\") continue;\n            if (elem.toLocaleLowerCase() == \"температура\") {\n                postfix = \"°c\";\n            }\n            if (elem.toLocaleLowerCase() == \"ощущается как\") {\n                postfix = \"°c\";\n            }\n            if (elem.toLocaleLowerCase() == \"осадки\") {\n                postfix = \"мм/3ч\";\n            }\n            if (elem.toLocaleLowerCase() == \"вер.осадков\") {\n                postfix = \"%\";\n            }\n\n            let content: string = `${elem}: ${data.payload[elem]} ${postfix}`;\n            let new_item = (\n                <span className=\"CustomizedTooltip__item\" key={generateHashCode(content)}>\n                    {content}\n                </span>\n            );\n\n            jsx_arr = [...jsx_arr, new_item];\n        }\n\n        return jsx_arr;\n    };\n\n    return (\n        <div ref={refTooltip} className=\"CustomizedTooltip_wrapper\">\n            {data ? (\n                <>\n                    <p>{data.payload.name}</p>\n                    {get_jsx_from_payload()}\n                </>\n            ) : null}\n        </div>\n    );\n}\n\nexport { CustomizedTooltip };\n","import React from \"react\";\nimport { AreaChart, XAxis, YAxis, Tooltip, CartesianGrid, Area, ResponsiveContainer } from \"recharts\";\nimport { CustomizedTooltip } from \"../CustomizedTooltip/CustomizedTooltip\";\n\ntype IChartDot = {\n    name: string; // имя раздела на графике к которому будет принадлежать точка\n    [pointName_value: string]: any; // ключем является имя точки, которое должно присутствовать в TChartTypeOneProps. ...pointsData.pointName, значение поля это значение на графике\n};\n\n// обьект м имянем точки и ее цветами, которая будет использоватся в графике\ntype TPointData = {\n    pointName: string;\n    pointLineCloror: string;\n    pointGradientCloror: string;\n};\n\ntype TChartTypeOneProps = {\n    chartData: IChartDot[];\n    pointsData: TPointData[];\n};\n\ntype TProps = Readonly<TChartTypeOneProps>;\n\nfunction ChartTypeOne({ chartData, pointsData }: TProps) {\n    return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\" debounce={200}>\n            <AreaChart margin={{ top: 0, left: 0, right: 0, bottom: 0 }} data={chartData}>\n                <defs>\n                    {pointsData.map((point) => {\n                        return (\n                            <React.Fragment key={point.pointName}>\n                                <linearGradient id={`color${point.pointName}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                    <stop offset=\"5%\" stopColor={point.pointGradientCloror} stopOpacity={0.8} />\n                                    <stop offset=\"95%\" stopColor={point.pointGradientCloror} stopOpacity={0.2} />\n                                </linearGradient>\n                            </React.Fragment>\n                        );\n                    })}\n                </defs>\n                {pointsData.map((point) => {\n                    return (\n                        <React.Fragment key={point.pointName}>\n                            <Area\n                                type=\"monotone\"\n                                dataKey={point.pointName}\n                                stroke={point.pointLineCloror}\n                                fillOpacity={1}\n                                fill={`url(#color${point.pointName})`}\n                            />\n                        </React.Fragment>\n                    );\n                })}\n                <XAxis dataKey={\"name\"} />\n                <YAxis width={50} />\n                <CartesianGrid strokeDasharray=\"5 5\" />\n                <Tooltip active={false} isAnimationActive={false} content={<CustomizedTooltip />} />\n            </AreaChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport { ChartTypeOne };\n","import React from \"react\";\nimport \"./City5d3hWeather.scss\";\nimport { ChartTypeOne } from \"../ChartTypeOne/ChartTypeOne\";\nimport { decode_dataIdRender } from \"./City5d3hWeather\";\nimport type { TresponseObjListObj, TresponseObj } from \"../../utils/fetch_5d3h_weather\";\nimport { get_text_date } from \"../../utils/util_functions\";\nimport { addon_map } from \"../../utils/util_functions\";\n\ntype TCity5d3hWeather_chartProps = {\n    rawSortedWeather: React.MutableRefObject<TresponseObjListObj[][]>;\n    dataIdRender: string;\n    chartDataType: string;\n};\n\ntype TProps = Readonly<TCity5d3hWeather_chartProps>;\n\nfunction City5d3hWeather_chart({ rawSortedWeather, dataIdRender, chartDataType }: TProps) {\n    const getChartData = (val: string, day: TresponseObjListObj) => {\n        let result: object = {};\n\n        switch (val) {\n            case \"Температура\":\n                result = {\n                    Температура: day.main.temp,\n                    [\"Ощущается как\"]: day.main.feels_like,\n                };\n                break;\n\n            case \"Осадки\":\n                result = {\n                    Осадки: 0,\n                };\n\n                if (day.rain) {\n                    result = { ...result, Осадки: day.rain[\"3h\"] };\n                }\n\n                if (day.snow) {\n                    result = { ...result, Осадки: day.snow[\"3h\"] };\n                }\n\n                result = {\n                    ...result,\n                    [\"Вер.осадков\"]: addon_map(day.pop, 0.0, 1.0, 0, 100).toFixed(0),\n                };\n\n                break;\n\n            default:\n                break;\n        }\n\n        return result;\n    };\n\n    return (\n        <ChartTypeOne\n            chartData={rawSortedWeather.current[Number(decode_dataIdRender(dataIdRender).index)].map((day) => {\n                let text_date = get_text_date(day.dt * 1000);\n                return {\n                    name: `${text_date.hoursUTC}:${text_date.minutesUTC}`,\n                    // [chartDataType]: getChartData(chartDataType, day),\n                    ...getChartData(chartDataType, day),\n                };\n            })}\n            pointsData={[{ pointName: chartDataType, pointGradientCloror: \"#f0f8ff\", pointLineCloror: \"#d33d29\" }]}\n        />\n    );\n}\n\nexport { City5d3hWeather_chart };\n","import React from \"react\";\nimport { WeatherAltInfoTemplate } from \"../WeatherAltInfoTemplate/WeatherAltInfoTemplate\";\nimport \"./City5d3hWeather.scss\";\n\ntype TCity5d3hWeather_chartTypeListProps = {\n    chartDataType: string;\n    setChartDataType: (val: string) => void;\n};\n\ntype TProps = Readonly<TCity5d3hWeather_chartTypeListProps>;\n\nfunction City5d3hWeather_chartTypeList({ chartDataType, setChartDataType }: TProps) {\n    const onClickTemp = (e: React.MouseEvent, data_id: string) => {\n        setChartDataType(data_id);\n    };\n\n    const onClickRainfall = (e: React.MouseEvent, data_id: string) => {\n        setChartDataType(data_id);\n    };\n\n    return (\n        <>\n            <WeatherAltInfoTemplate\n                slot_header=\"Температура\"\n                data_id={\"Температура\"}\n                onClick={onClickTemp}\n                addClassName={[chartDataType == \"Температура\" ? \"City5d3hWeather__day--active\" : \"\", \"City5d3hWeather__chart_type_item\"]}\n            />\n            <WeatherAltInfoTemplate\n                slot_header=\"Осадки\"\n                data_id={\"Осадки\"}\n                onClick={onClickRainfall}\n                addClassName={[chartDataType == \"Осадки\" ? \"City5d3hWeather__day--active\" : \"\", \"City5d3hWeather__chart_type_item\"]}\n            />\n        </>\n    );\n}\n\nexport { City5d3hWeather_chartTypeList };\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { City5d3hWeather_chart } from \"./City5d3hWeather_chart\";\nimport { City5d3hWeather_chartTypeList } from \"./City5d3hWeather_chartTypeList\";\nimport type { TresponseObjListObj } from \"../../utils/fetch_5d3h_weather\";\n\ntype TCity5d3hWeather_chartBlockProps = {\n    rawSortedWeather: React.MutableRefObject<TresponseObjListObj[][]>;\n    dataIdRender: string;\n};\n\ntype TProps = Readonly<TCity5d3hWeather_chartBlockProps>;\n\nfunction City5d3hWeather_chartBlock({ rawSortedWeather, dataIdRender }: TProps) {\n    const [chartDataType, setChartDataType] = useState<string>(\"Температура\"); // dt идонтефикатор дня, который мы отображаем\n    const refChartWrapper = useRef<HTMLDivElement>(null); // ссылка на DOM контейнер для графика\n\n    useEffect(() => {\n        if (!refChartWrapper.current) return;\n\n        const resizeCallback = () => {\n            if (!refChartWrapper.current) return;\n            const chartWrapperSizes = refChartWrapper.current!.getBoundingClientRect();\n            refChartWrapper.current!.style.height = `${chartWrapperSizes.width / 2}px`;\n        };\n\n        resizeCallback();\n\n        window.addEventListener(\"resize\", resizeCallback);\n\n        return () => {\n            window.removeEventListener(\"resize\", resizeCallback);\n        };\n    }, [refChartWrapper.current]);\n\n    return (\n        <>\n            <div className=\"City5d3hWeather__chart_type_list\">\n                <City5d3hWeather_chartTypeList chartDataType={chartDataType} setChartDataType={setChartDataType} />\n            </div>\n            <div className=\"City5d3hWeather__chart\" ref={refChartWrapper}>\n                <City5d3hWeather_chart rawSortedWeather={rawSortedWeather} dataIdRender={dataIdRender} chartDataType={chartDataType} />\n            </div>\n        </>\n    );\n}\n\nexport { City5d3hWeather_chartBlock };\n","import React, { useEffect, useState, useRef } from \"react\";\nimport \"./City5d3hWeather.scss\";\nimport { use5d3hWeather } from \"../../hooks/use5d3hWeather\";\nimport { IconLoader } from \"../../ui/IconLoader\";\nimport type { TresponseObjListObj, TresponseObj } from \"../../utils/fetch_5d3h_weather\";\nimport { get_text_date } from \"../../utils/util_functions\";\nimport { City5d3hWeather__daysList } from \"./City5d3hWeather_daysList\";\nimport { City5d3hWeather_dayWeather } from \"./City5d3hWeather_dayWeather\";\nimport { City5d3hWeather_chartBlock } from \"./City5d3hWeather_chartBlock\";\nimport { useAppStoreSelector } from \"../../redux/redux_hooks\";\n\ninterface ICity5d3hWeatherProps {}\n\ntype TProps = Readonly<ICity5d3hWeatherProps>;\n\n// преробразует таймштамп в строку типа ДД.ММ.ГГ Час:Мин\nfunction dt_from_string(dt: number): string {\n    let text_date = get_text_date(dt * 1000);\n    return `${text_date.day_numUTC}.${text_date.month_numUTC}.${text_date.year_numUTC} ${text_date.hoursUTC}:${text_date.minutesUTC}`;\n}\n\n// преобразует dataIdRender в обьект с данными\nfunction decode_dataIdRender(value: string) {\n    type TDecoded = {\n        date: string;\n        index: string;\n    };\n\n    let decoded: TDecoded = {\n        date: \"0\",\n        index: \"0\",\n    };\n\n    if (value != \"\") {\n        let temp = value.split(\"--\");\n        if (temp[0] && temp[1]) {\n            decoded.date = temp[0];\n            decoded.index = temp[1];\n        }\n    }\n\n    return decoded;\n}\n\nfunction City5d3hWeather({}: TProps = {}) {\n    const { lat, lon, cityName } = useAppStoreSelector((state) => state.weatherGeo);\n    // sorted_days_weather и rawSortedWeather это массив, в котором сперва находятся другие массивы (это дни), в них находятся обьекты, каждый обьект это прогноз на опредеенное время.\n    const [sorted_days_weather, set_sorted_days_weather] = useState<TresponseObjListObj[][]>([]); // двумерный массив, первый слой - дни, второй - погода на 3 - 9 - 15 - 21 часов\n    const rawSortedWeather = useRef<TresponseObjListObj[][]>([]); // тотже массив что и выше но тут в каждом дне присутствуют все часы с интервалом в 3\n    const [isLoadingVisible, setIsLoadingVisible] = useState<boolean>(false); // отображать-ли значек загрузки\n    const [isFetchError, setIsFetchError] = useState<boolean>(false); // ошибка загрузки данных\n    const [dataIdRender, setDataIdRender] = useState<string>(\"\"); // dt идонтефикатор дня, который мы отображаем // строка \"дд.мм.гг_отображаемого_дня--index_его_в_массиве\"\n\n    const onErrorFetchWeather = () => {\n        setIsLoadingVisible(false);\n        setIsFetchError(true);\n    };\n\n    const onStartFetchWeather = () => {\n        setIsLoadingVisible(true);\n        setIsFetchError(false);\n    };\n\n    const onEndFetchWeather = () => {\n        setIsLoadingVisible(false);\n    };\n\n    let [Weather, getWeather, forceGetWeather] = use5d3hWeather({\n        cityName,\n        lat,\n        lon,\n        errorCallback: onErrorFetchWeather,\n        fetchStartCallback: onStartFetchWeather,\n        fetchEndCallback: onEndFetchWeather,\n    });\n\n    const reload_comonent = () => {\n        setIsFetchError(false);\n        forceGetWeather();\n    };\n\n    // сортирует ответ на массив дней с прогнозами\n    const sort_weather_response = (weather: TresponseObj) => {\n        let days_map: string[] = [];\n        let result: TresponseObjListObj[][] = [];\n\n        const is_unique = (val: string) => {\n            let result = true;\n\n            if (days_map.length == 0) {\n                return true;\n            }\n\n            for (let elem of days_map) {\n                if (val == elem) {\n                    result = false;\n                    break;\n                }\n                result = true;\n            }\n\n            return result;\n        };\n\n        for (let forecast of weather.list) {\n            let day_id = (function () {\n                let text_date = get_text_date(forecast.dt * 1000);\n                return `${text_date.day_numUTC}.${text_date.month_numUTC}.${text_date.year_numUTC}`;\n            })();\n\n            if (is_unique(day_id)) {\n                days_map.push(day_id);\n            }\n        }\n\n        days_map.forEach((day, index) => {\n            result.push([]);\n            for (let forecast of weather.list) {\n                let day_id = (function () {\n                    let text_date = get_text_date(forecast.dt * 1000);\n                    return `${text_date.day_numUTC}.${text_date.month_numUTC}.${text_date.year_numUTC}`;\n                })();\n\n                if (day == day_id) {\n                    result[index].push(forecast);\n                }\n            }\n        });\n\n        return result;\n    };\n\n    // оставляет прогнозы на 3-9-15-21 часов\n    const delete_undue_hours = (sorted_weather: Readonly<TresponseObjListObj[][]>) => {\n        let result: TresponseObjListObj[][] = [];\n\n        for (let i = 0; i < sorted_weather.length; i++) {\n            result.push([]);\n\n            for (let day_data of sorted_weather[i]) {\n                let day_str = dt_from_string(day_data.dt);\n                if (day_str.includes(\"3:0\") || day_str.includes(\"9:0\") || day_str.includes(\"15:0\") || day_str.includes(\"21:0\")) {\n                    result[i].push(day_data);\n                }\n            }\n\n            if (result[i].length == 0) {\n                result.splice(i, 1); // если после чистки остался пустой подмассив то нужно его удалить\n            }\n        }\n\n        return result;\n    };\n\n    // после сортировки ответа о прогнозе\n    useEffect(() => {\n        // если не один день не выбран, выбираем первый по умолчанию\n        if (sorted_days_weather.length > 0 && dataIdRender == \"\") {\n            setDataIdRender(`${dt_from_string(sorted_days_weather[0][0].dt)}--0`);\n            console.log(sorted_days_weather);\n        } // else {\n        //     let decode_data_id_renderer = decode_dataIdRender(dataIdRender);\n        //     setDataIdRender(\n        //         `${dt_from_string(sorted_days_weather[Number(decode_data_id_renderer.index)][0].dt)}--${decode_data_id_renderer.index}`\n        //     );\n        // }\n    }, [sorted_days_weather]);\n\n    // после любого обновления прогноза\n    useEffect(() => {\n        if (!Weather) return;\n        rawSortedWeather.current = sort_weather_response(Weather);\n        set_sorted_days_weather(delete_undue_hours(rawSortedWeather.current));\n        console.log(Weather);\n    }, [Weather]);\n\n    // после любого обновления компонента\n    useEffect(() => {\n        getWeather();\n    });\n\n    return (\n        <div className=\"City5d3hWeather\">\n            {Weather && sorted_days_weather.length > 0 && !isLoadingVisible && !isFetchError ? (\n                <>\n                    <div className=\"City5d3hWeather__data_wrapper\">\n                        <City5d3hWeather__daysList\n                            sortedForecast={sorted_days_weather}\n                            setDataIdRender={setDataIdRender}\n                            dataIdRender={dataIdRender}\n                        />\n                        <div className=\"City5d3hWeather__day_weather\">\n                            {dataIdRender !== \"\" ? (\n                                <City5d3hWeather_dayWeather\n                                    dataIdRender={dataIdRender}\n                                    sorted_days_weather={sorted_days_weather}\n                                    weather={Weather}\n                                />\n                            ) : null}\n                        </div>\n                    </div>\n                    <div className=\"City5d3hWeather__chart_wrapper\">\n                        <City5d3hWeather_chartBlock rawSortedWeather={rawSortedWeather} dataIdRender={dataIdRender} />\n                    </div>\n                </>\n            ) : null}\n            {isFetchError ? (\n                <div className=\"City5d3hWeather__fetch_error\">\n                    <p>Ошибка при загрузке данных о погоде на 5 дней.</p>\n                    <button onClick={reload_comonent}>Перезагрузить</button>\n                </div>\n            ) : null}\n            {isLoadingVisible ? (\n                <div className=\"City5d3hWeather__loader_wrapper\">\n                    <IconLoader addClassName={[\"City5d3hWeather__loader\"]} />\n                </div>\n            ) : null}\n        </div>\n    );\n}\n\nexport { City5d3hWeather, dt_from_string, decode_dataIdRender };\nexport type { ICity5d3hWeatherProps };\n","let observer: MutationObserver;\n\nfunction on_added(mutations: MutationRecord[], observer: MutationObserver) {\n    // console.log(mutations);\n    let node = document.querySelector(\"#recharts_measurement_span\");\n\n    if (node) {\n        node.classList.add(\"visually_hidden\");\n        observer.disconnect();\n    }\n}\n\nwindow.addEventListener(\n    \"load\",\n    () => {\n        observer = new MutationObserver(on_added);\n        observer.observe(document.body, { childList: true, subtree: true });\n        document.querySelector(\"#recharts_measurement_span\")?.classList.add(\"visually_hidden\");\n    },\n    { once: true }\n);\n\nexport {};\n","import React from \"react\";\nimport \"./ErrorCacher.scss\";\n\ninterface Istate {\n    hasError: boolean;\n    error: Error | null;\n    info: string;\n}\n\ntype Tprops = React.PropsWithChildren;\n\nclass ErrorCacher extends React.Component<Tprops, Istate> {\n    public state: Readonly<Istate>;\n\n    constructor(props: Tprops) {\n        super(props);\n        this.state = {\n            hasError: false,\n            error: null,\n            info: \"\",\n        };\n\n        this.onReloadClick = this.onReloadClick.bind(this);\n    }\n\n    public static getDerivedStateFromError(err: Error): Partial<Istate> {\n        // Обновляем состояние для отображения резервного контента при следующем рендеринге\n        return {\n            hasError: true,\n            error: err,\n            info: `Name:${err.name}, Message:${err.message}`,\n        };\n    }\n\n    public componentDidCatch(error: Error, info: React.ErrorInfo) {\n        // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\n    }\n\n    public onReloadClick(e: React.MouseEvent) {\n        this.setState({ hasError: false });\n    }\n\n    public render() {\n        if (this.state.hasError) {\n            // Можно отрендерить запасной UI произвольного вида\n            return (\n                <div className=\"ErrorCacher\">\n                    <h1 className=\"ErrorCacher__Catch\">Перехвачена ошибка</h1>\n                    <pre className=\"ErrorCacher__Error\">{String(this.state.error)}</pre>\n                    <p className=\"ErrorCacher__Desc\">{this.state.info}</p>\n                    <button onClick={this.onReloadClick}>Перезагрузить</button>\n                </div>\n            );\n        }\n\n        return this.props.children ?? <></>;\n    }\n}\n\nexport { ErrorCacher };\n","import React, { memo, useEffect } from \"react\";\nimport \"./Home.scss\";\nimport { deep_object_is_equal } from \"../../utils/is_equal\";\nimport { CityCurrentWeather } from \"../../components/CityCurrentWeather/CityCurrentWeather\";\nimport { City5d3hWeather } from \"../../components/City5d3hWeather/City5d3hWeather\";\nimport type { ICity5d3hWeatherProps } from \"../../components/City5d3hWeather/City5d3hWeather\";\nimport \"./../../utils/chart_fix\";\nimport \"./../../global_styles/chart_fix.scss\";\nimport { ErrorCacher } from \"../../HOC/ErrorCacher/ErrorCacher\";\nimport { HocOnResizeUpdate } from \"../../HOC/OnResizeUpdate/OnResizeUpdate\";\nimport { updatePageSelector } from \"../../redux/slises/homePage\";\nimport { useAppStoreDispatch, useAppStoreSelector } from \"../../redux/redux_hooks\";\n\nconst City5d3hWeather_onResizeUpdate = HocOnResizeUpdate<ICity5d3hWeatherProps>(City5d3hWeather); // City5d3hWeather нужно перерендоревать при ресайзе\n\ninterface IHomePageProps {}\n\ntype TProps = Readonly<IHomePageProps>;\n\nfunction HomePage({}: TProps) {\n    const { backgroundClass } = useAppStoreSelector((state) => state.homePage);\n    let stateWeatherGeoDispatch = useAppStoreDispatch();\n\n    // при вервой загрузке обновляем  селектор этого компонента в сторе\n    useEffect(() => {\n        stateWeatherGeoDispatch(updatePageSelector(\"div[class*='Home']\"));\n        return () => {\n            stateWeatherGeoDispatch(updatePageSelector(\"\"));\n        };\n    }, []);\n\n    return (\n        <>\n            <div className={`Home ${backgroundClass ?? \"\"}`}>\n                <div className=\"Home__in_container\">\n                    <section className=\"Home__weather_now\">\n                        <h3 className=\"visually_hidden\">Погода на сегодня</h3>\n                        <ErrorCacher>\n                            <CityCurrentWeather />\n                        </ErrorCacher>\n                    </section>\n                    <section className=\"Home__weather_week\">\n                        <h3 className=\"visually_hidden\">Погода на 5 дней</h3>\n                        <ErrorCacher>\n                            <City5d3hWeather_onResizeUpdate />\n                        </ErrorCacher>\n                    </section>\n                </div>\n            </div>\n        </>\n    );\n}\n\nconst HomePage_memo = memo(HomePage, deep_object_is_equal);\n\nexport { HomePage as default, HomePage_memo };\nexport type { IHomePageProps };\n","import React, { useRef, useEffect } from \"react\";\nimport { useHandleUpdate } from \"../../hooks/useHandleUpdate\";\nimport { first_caller_delay_callback } from \"../../utils/decorators\";\n\n// Вызывает перерендер содержимого после ресайза окна\n\ninterface IOnResizeUpdateProps {}\n\ntype TProps = Readonly<IOnResizeUpdateProps>;\n\nfunction HocOnResizeUpdate<TWrapperProps extends {}>(\n    WrappedComponent: React.ComponentType<TWrapperProps>\n): React.FC<TWrapperProps & TProps> {\n    const OnResizeUpdate: React.FC<TWrapperProps & TProps> = (props) => {\n        let { ...wrappedOnlyProps } = props;\n        let wrappedFullProps = { ...(wrappedOnlyProps as unknown as TWrapperProps) };\n        const [handleupdate] = useHandleUpdate();\n\n        useEffect(() => {\n            const onResize = first_caller_delay_callback(\n                (e: Event) => {\n                    handleupdate();\n                },\n                () => {},\n                100\n            );\n\n            window.addEventListener(\"resize\", onResize);\n\n            return () => {\n                window.removeEventListener(\"resize\", onResize);\n            };\n        }, []);\n\n        return (\n            <React.Fragment>\n                <WrappedComponent {...wrappedFullProps} />\n            </React.Fragment>\n        );\n    };\n\n    return OnResizeUpdate;\n}\n\nexport { HocOnResizeUpdate };\n"],"names":["generate_url","lat","lon","temp_url","URL","WEATHER_API_ADRESS_CURRENT","searchParams","set","toString","get_system_language","WEATHER_API_KEY","fetch_current_weather","_x","_fetch_current_weather","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","_ref$callBack","callBack","_ref$errorCallback","errorCallback","_ref$getController","getController","full_url","response","controller","get_response","raw_response","wrap","_context","prev","next","AbortController","fetch","signal","sent","json","cod","Error","JSON","stringify","t0","message","includes","abrupt","console","group","error","concat","groupEnd","stop","MAX_RADIUS","useCurrentWeather","cityName","_ref$fetchEndCallback","fetchEndCallback","_ref$fetchStartCallba","fetchStartCallback","_useState","useState","_useState2","_slicedToArray","weather","setWeather","memoPos","useRef","prewLat","prewLon","isFetching","abortController","fetchingResponseCallback","resp","current","fetchingErrorCallback","fetchingStartCallback","abort","log","getAbortController","obj","Math","abs","coord","name","IconDirection","_ref$addClassName","addClassName","_ref$direction","direction","title","componentClassName","_toConsumableArray","join","fixed_direction","number_to_deg360","_jsxs","className","onClick","e","children","_jsx","viewBox","xmlns","fill","d","style","transform","transformOrigin","WeatherNowTime","obj_date","times","_ref$get_dayNum_month","get_dayNum_monthName","_ref$get_year","get_year","_ref$get_hours","get_hours","_ref$get_minutes","get_minutes","_ref$get_hours_minute","get_hours_minutes","weather_date","Date","dt","timezone","get_text_date","str","dayNum_monthNameUTC","year_numUTC","hoursUTC","minutesUTC","trim","RenderString","IconWeatherClearDay","version","xmlnsXlink","x","y","xmlSpace","cx","cy","r","attributeType","attributeName","dur","keyTimes","repeatCount","values","calcMode","IconWeatherClearNight","id","IconWeatherCloudyDay","type","IconWeatherCloudyNight","IconWeatherCloudy","IconWeatherRain_1","IconWeatherRain_2","IconWeatherRain_3","IconWeatherThunder","IconWeatherSnowRain","componentclassName","IconWeatherSnow_1","IconWeatherSnow_2","IconWeatherSnow_3","renderIcon","weather_data","day_time_datails","calc_sun_hours_details","sunrise","sunset","day_time","calc_weather_day_time","weather_detail_id","weather_id","warn","WeatherIcon","WeatherBaseInfo","description","temp","toFixed","feels_like","WeatherAltInfoTemplate","newClassName","slot_header","slot_main","slot_dop","_ref$onClick","_ref$data_id","data_id","first_caller_delay_callback","func","call_stack","callback","length","undefined","delay","is_start","timer_id","_len2","args","Array","_key2","argum","clearTimeout","setTimeout","HoverHint","_ref$hoverText","hoverText","_ref$gap_vertical","gap_vertical","_ref$gap_horizontal","gap_horizontal","_ref$start_delay","start_delay","_ref$end_delay","end_delay","isHover","setIsHover","isHoverOut","hintRef","hoverHintRef","hoverData","cursor_x","cursor_y","target_w","target_h","target_document_left","target_document_top","target_vp_left","target_vp_top","hint_w","hint_h","to_render_hint_top","onEnter","useCallback","taget_data","currentTarget","getBoundingClientRect","offsets","GetElementOffsetsInDocument","_objectSpread","floor","width","height","left","top","updateHover","add_to_macro_stack","onOut","useEffect","hint_data","update_hint_data","pos_left","window","scrollX","document","body","clientWidth","calcHintPositionLeft","scrollY","arrow","querySelector","classList","add","parseInt","render_arrow","onScroll_or_onResize","addEventListener","timerId","removeEventListener","onMouseMove","nativeEvent","ref","Portal","IconSunrise","x1","x2","y1","y2","points","WeatherSunPhase","sun_hours","cityTime","cityTimezone","fixed_timestamp","refVieport","refSunWrapper","refG2","_useHandleUpdate","useHandleUpdate","handleupdate","is_night","timestamp","fixed_time_data","needProcent","fixed_procent","calcProcents","set_sun_offset","addon_map","calc_sun_pos","onResize","_Fragment","hours","minutes","CityCurrentWeather","_objectDestructuringEmpty","_useAppStoreSelector","useAppStoreSelector","state","weatherGeo","reduxStoreDispatch","useAppStoreDispatch","isLoadingVisible","setIsLoadingVisible","_useState3","_useState4","isFetchError","setIsFetchError","_useCurrentWeather","_useCurrentWeather2","currentWeather","getWeather","forceGetWeather","is_pressure","main","pressure","grnd_level","sun_data","sys","updateBackgroundClass","calc_backgraund_type","snow","rain","round","humidity","clouds","all","convert_hpa_to_mmRtSt","wind","deg_to_compass","deg","speed","visibility","toPrecision","IconLoader","WEATHER_API_ADRESS_5D3H","fetch_5d3h_weather","_fetch_5d3h_weather","use5d3hWeather","city","City5d3hWeather__daysList","sortedForecast","setDataIdRender","dataIdRender","gen_classnames","day","date_txt","classes","decode_dataIdRender","date","dt_from_string","push","day_name_shortUTC","toLocaleUpperCase","map","index","React","City5d3hWeather_dayWeather","sorted_days_weather","day_id","Number","calc_sunrise","base_sunrise","jsDate","jsDate_h","getUTCHours","jsDate_m","getUTCMinutes","calced_sunrise","setUTCHours","setUTCMinutes","getTime","calc_sunset","base_sunset","calced_sunset","is_mobile_screen_size","mobile_html","desctop_html","forecast","text_date","pop","CustomizedTooltip","external","isActive","active","refTooltip","data","payload","toolTipHide","tooltip","dispatchEvent","MouseEvent","bubbles","jsx_arr","postfix","elem","toLocaleLowerCase","content","new_item","generateHashCode","get_jsx_from_payload","ChartTypeOne","chartData","pointsData","ResponsiveContainer","debounce","AreaChart","margin","right","bottom","point","pointName","offset","stopColor","pointGradientCloror","stopOpacity","Area","dataKey","stroke","pointLineCloror","fillOpacity","XAxis","YAxis","CartesianGrid","strokeDasharray","Tooltip","isAnimationActive","City5d3hWeather_chart","rawSortedWeather","chartDataType","val","result","_defineProperty","Температура","Осадки","getChartData","City5d3hWeather_chartTypeList","setChartDataType","City5d3hWeather_chartBlock","refChartWrapper","resizeCallback","chartWrapperSizes","day_numUTC","month_numUTC","value","decoded","split","on_added","mutations","observer","node","disconnect","_document$querySelect","MutationObserver","observe","childList","subtree","once","ErrorCacher","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","hasError","info","onReloadClick","bind","_assertThisInitialized","_createClass","key","this","setState","_this$props$children","String","err","WrappedComponent","City5d3hWeather_onResizeUpdate","set_sorted_days_weather","_useState5","_useState6","_useState7","_useState8","_use5d3hWeather","_use5d3hWeather2","Weather","sort_weather_response","_step","days_map","_iterator","_createForOfIteratorHelper","list","_loop2","_i","_days_map","is_unique","s","n","done","f","forEach","_step2","_iterator2","_loop","sorted_weather","i","_step3","_iterator3","day_data","day_str","splice","delete_undue_hours","wrappedOnlyProps","Object","assign","wrappedFullProps","HomePage","backgroundClass","homePage","stateWeatherGeoDispatch","updatePageSelector","HomePage_memo","memo","deep_object_is_equal"],"sourceRoot":""}