{"version":3,"file":"static/js/44.56aa1ccf.chunk.js","mappings":"oMAUMA,GAAiBC,EAAAA,EAAAA,OAAK,kBAAM,sCAAgC,IAElE,SAASC,EAAoBC,GAAuE,IAADC,EAAAD,EAAnEE,oBAAAA,OAAmB,IAAAD,EAAG,CAAC,IAAGA,EAAAE,EAAAH,EAAEI,qBAAAA,OAAoB,IAAAD,EAAG,CAAC,IAAGA,EAC7EE,EAA4B,GAAAC,QAAAC,EAAAA,EAAAA,GAAIL,GAAmB,CAAE,yBAAwBM,KAAK,KAClFC,GAA6BF,EAAAA,EAAAA,GAAIH,GAAsBI,KAAK,KAClEE,GAAsCC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAMlC,OACII,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACKJ,GACGE,EAAAA,EAAAA,KAACG,EAAAA,SAAQ,CAACC,UAAUJ,EAAAA,EAAAA,KAAA,OAAKK,UAAS,GAAAf,OAAKD,EAAyB,kCAAiCa,SAAC,wDAAkBA,UAChHF,EAAAA,EAAAA,KAACnB,EAAc,CACXyB,cAAe,CAAEC,mBAAmB,EAAOC,aAAa,GACxDC,aAAc,CAAChB,QAIvBO,EAAAA,EAAAA,KAAA,OAAKK,UAAS,GAAAf,OAAKD,EAAyB,kCAAiCa,UACzEF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,+BAA+BK,QAf3C,SAACC,GACnBZ,GAAe,EACnB,EAawFG,SAAC,uFAO7F,CC7BA,SAASU,IACL,OACIC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,cAAaH,SAAA,EACxBF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,4BAA2BH,SAAC,gFACzCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAC7BF,EAAAA,EAAAA,KAACjB,EAAoB,QAIrC,C","sources":["components/TwoGisMapLoadOnClick/TwoGisMapLoadOnClick.tsx","pages/NotCityFind/NotCityFind.tsx"],"sourcesContent":["import React, { useState, lazy, Suspense } from \"react\";\nimport \"./TwoGisMapLoadOnClick.scss\";\n\ninterface IPropsTwoGisMapLoadOnClick {\n    addClassNameDefault?: string[];\n    addClassNameDeLoaded?: string[];\n}\n\ntype TProps = Readonly<IPropsTwoGisMapLoadOnClick>;\n\nconst TwoGisMapsLazy = lazy(() => import(\"../TwoGisMap/TwoGisMap\"));\n\nfunction TwoGisMapLoadOnClick({ addClassNameDefault = [\"\"], addClassNameDeLoaded = [\"\"] }: TProps) {\n    const componentClassNameDefault = [...addClassNameDefault, \"TwoGisMapLoadOnClick\"].join(\" \");\n    const componentClassNameDeLoaded = [...addClassNameDeLoaded].join(\" \");\n    const [isLoadState, setIsLoadState] = useState<boolean>(false);\n\n    const onButtonClick = (e: React.MouseEvent) => {\n        setIsLoadState(true);\n    };\n\n    return (\n        <>\n            {isLoadState ? (\n                <Suspense fallback={<div className={`${componentClassNameDefault} TwoGisMapLoadOnClick__loading`}>Загрузка...</div>}>\n                    <TwoGisMapsLazy\n                        mapInitConfig={{ fullscreenControl: false, zoomControl: false }}\n                        addClassName={[componentClassNameDeLoaded]}\n                    />\n                </Suspense>\n            ) : (\n                <div className={`${componentClassNameDefault} TwoGisMapLoadOnClick__default`}>\n                    <button className=\"TwoGisMapLoadOnClick__button\" onClick={onButtonClick}>\n                        Показать карту\n                    </button>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport { TwoGisMapLoadOnClick };\n","import React, { useEffect } from \"react\";\nimport \"./NotCityFind.scss\";\nimport { TwoGisMapLoadOnClick } from \"../../components/TwoGisMapLoadOnClick/TwoGisMapLoadOnClick\";\n\n/**\n * Выводится в случае если при первом открытии страницы не удалось\n * получить город для загрузки погоды (нет данных в url и нет данных в истории)\n *\n */\n\nfunction NotCityFind() {\n    return (\n        <div className=\"NotCityFind\">\n            <p className=\"NotCityFind__default_text\">Начните поиск.</p>\n            <div className=\"NotCityFind__map\">\n                <TwoGisMapLoadOnClick />\n            </div>\n        </div>\n    );\n}\n\nexport { NotCityFind as default };\n"],"names":["TwoGisMapsLazy","lazy","TwoGisMapLoadOnClick","_ref","_ref$addClassNameDefa","addClassNameDefault","_ref$addClassNameDeLo","addClassNameDeLoaded","componentClassNameDefault","concat","_toConsumableArray","join","componentClassNameDeLoaded","_useState","useState","_useState2","_slicedToArray","isLoadState","setIsLoadState","_jsx","_Fragment","children","Suspense","fallback","className","mapInitConfig","fullscreenControl","zoomControl","addClassName","onClick","e","NotCityFind","_jsxs"],"sourceRoot":""}